/*
 * Copyright (c) 2019-2022 GeyserMC. http://geysermc.org
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @author GeyserMC
 * @link https://github.com/GeyserMC/Geyser
 */

package org.geysermc.geyser.item;

import org.geysermc.geyser.item.components.ToolTier;
import org.geysermc.geyser.item.type.*;
import org.geysermc.geyser.level.block.Blocks;
import org.geysermc.geyser.registry.Registries;

import static org.geysermc.geyser.item.type.Item.builder;

/**
 * A list, in order, of all Java items.
 */
@SuppressWarnings("unused")
public final class Items {
    public static final Item AIR = register(new Item("air", builder()));
    public static final Item STONE = register(new BlockItem(builder(), Blocks.STONE));
    public static final Item GRANITE = register(new BlockItem(builder(), Blocks.GRANITE));
    public static final Item POLISHED_GRANITE = register(new BlockItem(builder(), Blocks.POLISHED_GRANITE));
    public static final Item DIORITE = register(new BlockItem(builder(), Blocks.DIORITE));
    public static final Item POLISHED_DIORITE = register(new BlockItem(builder(), Blocks.POLISHED_DIORITE));
    public static final Item ANDESITE = register(new BlockItem(builder(), Blocks.ANDESITE));
    public static final Item POLISHED_ANDESITE = register(new BlockItem(builder(), Blocks.POLISHED_ANDESITE));
    public static final Item DEEPSLATE = register(new BlockItem(builder(), Blocks.DEEPSLATE));
    public static final Item COBBLED_DEEPSLATE = register(new BlockItem(builder(), Blocks.COBBLED_DEEPSLATE));
    public static final Item POLISHED_DEEPSLATE = register(new BlockItem(builder(), Blocks.POLISHED_DEEPSLATE));
    public static final Item CALCITE = register(new BlockItem(builder(), Blocks.CALCITE));
    public static final Item TUFF = register(new BlockItem(builder(), Blocks.TUFF));
    public static final Item TUFF_SLAB = register(new BlockItem(builder(), Blocks.TUFF_SLAB));
    public static final Item TUFF_STAIRS = register(new BlockItem(builder(), Blocks.TUFF_STAIRS));
    public static final Item TUFF_WALL = register(new BlockItem(builder(), Blocks.TUFF_WALL));
    public static final Item CHISELED_TUFF = register(new BlockItem(builder(), Blocks.CHISELED_TUFF));
    public static final Item POLISHED_TUFF = register(new BlockItem(builder(), Blocks.POLISHED_TUFF));
    public static final Item POLISHED_TUFF_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_TUFF_SLAB));
    public static final Item POLISHED_TUFF_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_TUFF_STAIRS));
    public static final Item POLISHED_TUFF_WALL = register(new BlockItem(builder(), Blocks.POLISHED_TUFF_WALL));
    public static final Item TUFF_BRICKS = register(new BlockItem(builder(), Blocks.TUFF_BRICKS));
    public static final Item TUFF_BRICK_SLAB = register(new BlockItem(builder(), Blocks.TUFF_BRICK_SLAB));
    public static final Item TUFF_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.TUFF_BRICK_STAIRS));
    public static final Item TUFF_BRICK_WALL = register(new BlockItem(builder(), Blocks.TUFF_BRICK_WALL));
    public static final Item CHISELED_TUFF_BRICKS = register(new BlockItem(builder(), Blocks.CHISELED_TUFF_BRICKS));
    public static final Item DRIPSTONE_BLOCK = register(new BlockItem(builder(), Blocks.DRIPSTONE_BLOCK));
    public static final Item GRASS_BLOCK = register(new BlockItem(builder(), Blocks.GRASS_BLOCK));
    public static final Item DIRT = register(new BlockItem(builder(), Blocks.DIRT));
    public static final Item COARSE_DIRT = register(new BlockItem(builder(), Blocks.COARSE_DIRT));
    public static final Item PODZOL = register(new BlockItem(builder(), Blocks.PODZOL));
    public static final Item ROOTED_DIRT = register(new BlockItem(builder(), Blocks.ROOTED_DIRT));
    public static final Item MUD = register(new BlockItem(builder(), Blocks.MUD));
    public static final Item CRIMSON_NYLIUM = register(new BlockItem(builder(), Blocks.CRIMSON_NYLIUM));
    public static final Item WARPED_NYLIUM = register(new BlockItem(builder(), Blocks.WARPED_NYLIUM));
    public static final Item COBBLESTONE = register(new BlockItem(builder(), Blocks.COBBLESTONE));
    public static final Item OAK_PLANKS = register(new BlockItem(builder(), Blocks.OAK_PLANKS));
    public static final Item SPRUCE_PLANKS = register(new BlockItem(builder(), Blocks.SPRUCE_PLANKS));
    public static final Item BIRCH_PLANKS = register(new BlockItem(builder(), Blocks.BIRCH_PLANKS));
    public static final Item JUNGLE_PLANKS = register(new BlockItem(builder(), Blocks.JUNGLE_PLANKS));
    public static final Item ACACIA_PLANKS = register(new BlockItem(builder(), Blocks.ACACIA_PLANKS));
    public static final Item CHERRY_PLANKS = register(new BlockItem(builder(), Blocks.CHERRY_PLANKS));
    public static final Item DARK_OAK_PLANKS = register(new BlockItem(builder(), Blocks.DARK_OAK_PLANKS));
    public static final Item MANGROVE_PLANKS = register(new BlockItem(builder(), Blocks.MANGROVE_PLANKS));
    public static final Item BAMBOO_PLANKS = register(new BlockItem(builder(), Blocks.BAMBOO_PLANKS));
    public static final Item CRIMSON_PLANKS = register(new BlockItem(builder(), Blocks.CRIMSON_PLANKS));
    public static final Item WARPED_PLANKS = register(new BlockItem(builder(), Blocks.WARPED_PLANKS));
    public static final Item BAMBOO_MOSAIC = register(new BlockItem(builder(), Blocks.BAMBOO_MOSAIC));
    public static final Item OAK_SAPLING = register(new BlockItem(builder(), Blocks.OAK_SAPLING));
    public static final Item SPRUCE_SAPLING = register(new BlockItem(builder(), Blocks.SPRUCE_SAPLING));
    public static final Item BIRCH_SAPLING = register(new BlockItem(builder(), Blocks.BIRCH_SAPLING));
    public static final Item JUNGLE_SAPLING = register(new BlockItem(builder(), Blocks.JUNGLE_SAPLING));
    public static final Item ACACIA_SAPLING = register(new BlockItem(builder(), Blocks.ACACIA_SAPLING));
    public static final Item CHERRY_SAPLING = register(new BlockItem(builder(), Blocks.CHERRY_SAPLING));
    public static final Item DARK_OAK_SAPLING = register(new BlockItem(builder(), Blocks.DARK_OAK_SAPLING));
    public static final Item MANGROVE_PROPAGULE = register(new BlockItem(builder(), Blocks.MANGROVE_PROPAGULE));
    public static final Item BEDROCK = register(new BlockItem(builder(), Blocks.BEDROCK));
    public static final Item SAND = register(new BlockItem(builder(), Blocks.SAND));
    public static final Item SUSPICIOUS_SAND = register(new BlockItem(builder(), Blocks.SUSPICIOUS_SAND));
    public static final Item SUSPICIOUS_GRAVEL = register(new BlockItem(builder(), Blocks.SUSPICIOUS_GRAVEL));
    public static final Item RED_SAND = register(new BlockItem(builder(), Blocks.RED_SAND));
    public static final Item GRAVEL = register(new BlockItem(builder(), Blocks.GRAVEL));
    public static final Item COAL_ORE = register(new BlockItem(builder(), Blocks.COAL_ORE));
    public static final Item DEEPSLATE_COAL_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_COAL_ORE));
    public static final Item IRON_ORE = register(new BlockItem(builder(), Blocks.IRON_ORE));
    public static final Item DEEPSLATE_IRON_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_IRON_ORE));
    public static final Item COPPER_ORE = register(new BlockItem(builder(), Blocks.COPPER_ORE));
    public static final Item DEEPSLATE_COPPER_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_COPPER_ORE));
    public static final Item GOLD_ORE = register(new BlockItem(builder(), Blocks.GOLD_ORE));
    public static final Item DEEPSLATE_GOLD_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_GOLD_ORE));
    public static final Item REDSTONE_ORE = register(new BlockItem(builder(), Blocks.REDSTONE_ORE));
    public static final Item DEEPSLATE_REDSTONE_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_REDSTONE_ORE));
    public static final Item EMERALD_ORE = register(new BlockItem(builder(), Blocks.EMERALD_ORE));
    public static final Item DEEPSLATE_EMERALD_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_EMERALD_ORE));
    public static final Item LAPIS_ORE = register(new BlockItem(builder(), Blocks.LAPIS_ORE));
    public static final Item DEEPSLATE_LAPIS_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_LAPIS_ORE));
    public static final Item DIAMOND_ORE = register(new BlockItem(builder(), Blocks.DIAMOND_ORE));
    public static final Item DEEPSLATE_DIAMOND_ORE = register(new BlockItem(builder(), Blocks.DEEPSLATE_DIAMOND_ORE));
    public static final Item NETHER_GOLD_ORE = register(new BlockItem(builder(), Blocks.NETHER_GOLD_ORE));
    public static final Item NETHER_QUARTZ_ORE = register(new BlockItem(builder(), Blocks.NETHER_QUARTZ_ORE));
    public static final Item ANCIENT_DEBRIS = register(new BlockItem(builder(), Blocks.ANCIENT_DEBRIS));
    public static final Item COAL_BLOCK = register(new BlockItem(builder(), Blocks.COAL_BLOCK));
    public static final Item RAW_IRON_BLOCK = register(new BlockItem(builder(), Blocks.RAW_IRON_BLOCK));
    public static final Item RAW_COPPER_BLOCK = register(new BlockItem(builder(), Blocks.RAW_COPPER_BLOCK));
    public static final Item RAW_GOLD_BLOCK = register(new BlockItem(builder(), Blocks.RAW_GOLD_BLOCK));
    public static final Item HEAVY_CORE = register(new BlockItem(builder(), Blocks.HEAVY_CORE));
    public static final Item AMETHYST_BLOCK = register(new BlockItem(builder(), Blocks.AMETHYST_BLOCK));
    public static final Item BUDDING_AMETHYST = register(new BlockItem(builder(), Blocks.BUDDING_AMETHYST));
    public static final Item IRON_BLOCK = register(new BlockItem(builder(), Blocks.IRON_BLOCK));
    public static final Item COPPER_BLOCK = register(new BlockItem(builder(), Blocks.COPPER_BLOCK));
    public static final Item GOLD_BLOCK = register(new BlockItem(builder(), Blocks.GOLD_BLOCK));
    public static final Item DIAMOND_BLOCK = register(new BlockItem(builder(), Blocks.DIAMOND_BLOCK));
    public static final Item NETHERITE_BLOCK = register(new BlockItem(builder(), Blocks.NETHERITE_BLOCK));
    public static final Item EXPOSED_COPPER = register(new BlockItem(builder(), Blocks.EXPOSED_COPPER));
    public static final Item WEATHERED_COPPER = register(new BlockItem(builder(), Blocks.WEATHERED_COPPER));
    public static final Item OXIDIZED_COPPER = register(new BlockItem(builder(), Blocks.OXIDIZED_COPPER));
    public static final Item CHISELED_COPPER = register(new BlockItem(builder(), Blocks.CHISELED_COPPER));
    public static final Item EXPOSED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.EXPOSED_CHISELED_COPPER));
    public static final Item WEATHERED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.WEATHERED_CHISELED_COPPER));
    public static final Item OXIDIZED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.OXIDIZED_CHISELED_COPPER));
    public static final Item CUT_COPPER = register(new BlockItem(builder(), Blocks.CUT_COPPER));
    public static final Item EXPOSED_CUT_COPPER = register(new BlockItem(builder(), Blocks.EXPOSED_CUT_COPPER));
    public static final Item WEATHERED_CUT_COPPER = register(new BlockItem(builder(), Blocks.WEATHERED_CUT_COPPER));
    public static final Item OXIDIZED_CUT_COPPER = register(new BlockItem(builder(), Blocks.OXIDIZED_CUT_COPPER));
    public static final Item CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.CUT_COPPER_STAIRS));
    public static final Item EXPOSED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.EXPOSED_CUT_COPPER_STAIRS));
    public static final Item WEATHERED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.WEATHERED_CUT_COPPER_STAIRS));
    public static final Item OXIDIZED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.OXIDIZED_CUT_COPPER_STAIRS));
    public static final Item CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.CUT_COPPER_SLAB));
    public static final Item EXPOSED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.EXPOSED_CUT_COPPER_SLAB));
    public static final Item WEATHERED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.WEATHERED_CUT_COPPER_SLAB));
    public static final Item OXIDIZED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.OXIDIZED_CUT_COPPER_SLAB));
    public static final Item WAXED_COPPER_BLOCK = register(new BlockItem(builder(), Blocks.WAXED_COPPER_BLOCK));
    public static final Item WAXED_EXPOSED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_COPPER));
    public static final Item WAXED_WEATHERED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_COPPER));
    public static final Item WAXED_OXIDIZED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_COPPER));
    public static final Item WAXED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_CHISELED_COPPER));
    public static final Item WAXED_EXPOSED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_CHISELED_COPPER));
    public static final Item WAXED_WEATHERED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_CHISELED_COPPER));
    public static final Item WAXED_OXIDIZED_CHISELED_COPPER = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_CHISELED_COPPER));
    public static final Item WAXED_CUT_COPPER = register(new BlockItem(builder(), Blocks.WAXED_CUT_COPPER));
    public static final Item WAXED_EXPOSED_CUT_COPPER = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_CUT_COPPER));
    public static final Item WAXED_WEATHERED_CUT_COPPER = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_CUT_COPPER));
    public static final Item WAXED_OXIDIZED_CUT_COPPER = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_CUT_COPPER));
    public static final Item WAXED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.WAXED_CUT_COPPER_STAIRS));
    public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS));
    public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS));
    public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS));
    public static final Item WAXED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.WAXED_CUT_COPPER_SLAB));
    public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB));
    public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB));
    public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB));
    public static final Item OAK_LOG = register(new BlockItem(builder(), Blocks.OAK_LOG));
    public static final Item SPRUCE_LOG = register(new BlockItem(builder(), Blocks.SPRUCE_LOG));
    public static final Item BIRCH_LOG = register(new BlockItem(builder(), Blocks.BIRCH_LOG));
    public static final Item JUNGLE_LOG = register(new BlockItem(builder(), Blocks.JUNGLE_LOG));
    public static final Item ACACIA_LOG = register(new BlockItem(builder(), Blocks.ACACIA_LOG));
    public static final Item CHERRY_LOG = register(new BlockItem(builder(), Blocks.CHERRY_LOG));
    public static final Item DARK_OAK_LOG = register(new BlockItem(builder(), Blocks.DARK_OAK_LOG));
    public static final Item MANGROVE_LOG = register(new BlockItem(builder(), Blocks.MANGROVE_LOG));
    public static final Item MANGROVE_ROOTS = register(new BlockItem(builder(), Blocks.MANGROVE_ROOTS));
    public static final Item MUDDY_MANGROVE_ROOTS = register(new BlockItem(builder(), Blocks.MUDDY_MANGROVE_ROOTS));
    public static final Item CRIMSON_STEM = register(new BlockItem(builder(), Blocks.CRIMSON_STEM));
    public static final Item WARPED_STEM = register(new BlockItem(builder(), Blocks.WARPED_STEM));
    public static final Item BAMBOO_BLOCK = register(new BlockItem(builder(), Blocks.BAMBOO_BLOCK));
    public static final Item STRIPPED_OAK_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_OAK_LOG));
    public static final Item STRIPPED_SPRUCE_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_SPRUCE_LOG));
    public static final Item STRIPPED_BIRCH_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_BIRCH_LOG));
    public static final Item STRIPPED_JUNGLE_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_JUNGLE_LOG));
    public static final Item STRIPPED_ACACIA_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_ACACIA_LOG));
    public static final Item STRIPPED_CHERRY_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_CHERRY_LOG));
    public static final Item STRIPPED_DARK_OAK_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_DARK_OAK_LOG));
    public static final Item STRIPPED_MANGROVE_LOG = register(new BlockItem(builder(), Blocks.STRIPPED_MANGROVE_LOG));
    public static final Item STRIPPED_CRIMSON_STEM = register(new BlockItem(builder(), Blocks.STRIPPED_CRIMSON_STEM));
    public static final Item STRIPPED_WARPED_STEM = register(new BlockItem(builder(), Blocks.STRIPPED_WARPED_STEM));
    public static final Item STRIPPED_OAK_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_OAK_WOOD));
    public static final Item STRIPPED_SPRUCE_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_SPRUCE_WOOD));
    public static final Item STRIPPED_BIRCH_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_BIRCH_WOOD));
    public static final Item STRIPPED_JUNGLE_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_JUNGLE_WOOD));
    public static final Item STRIPPED_ACACIA_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_ACACIA_WOOD));
    public static final Item STRIPPED_CHERRY_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_CHERRY_WOOD));
    public static final Item STRIPPED_DARK_OAK_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_DARK_OAK_WOOD));
    public static final Item STRIPPED_MANGROVE_WOOD = register(new BlockItem(builder(), Blocks.STRIPPED_MANGROVE_WOOD));
    public static final Item STRIPPED_CRIMSON_HYPHAE = register(new BlockItem(builder(), Blocks.STRIPPED_CRIMSON_HYPHAE));
    public static final Item STRIPPED_WARPED_HYPHAE = register(new BlockItem(builder(), Blocks.STRIPPED_WARPED_HYPHAE));
    public static final Item STRIPPED_BAMBOO_BLOCK = register(new BlockItem(builder(), Blocks.STRIPPED_BAMBOO_BLOCK));
    public static final Item OAK_WOOD = register(new BlockItem(builder(), Blocks.OAK_WOOD));
    public static final Item SPRUCE_WOOD = register(new BlockItem(builder(), Blocks.SPRUCE_WOOD));
    public static final Item BIRCH_WOOD = register(new BlockItem(builder(), Blocks.BIRCH_WOOD));
    public static final Item JUNGLE_WOOD = register(new BlockItem(builder(), Blocks.JUNGLE_WOOD));
    public static final Item ACACIA_WOOD = register(new BlockItem(builder(), Blocks.ACACIA_WOOD));
    public static final Item CHERRY_WOOD = register(new BlockItem(builder(), Blocks.CHERRY_WOOD));
    public static final Item DARK_OAK_WOOD = register(new BlockItem(builder(), Blocks.DARK_OAK_WOOD));
    public static final Item MANGROVE_WOOD = register(new BlockItem(builder(), Blocks.MANGROVE_WOOD));
    public static final Item CRIMSON_HYPHAE = register(new BlockItem(builder(), Blocks.CRIMSON_HYPHAE));
    public static final Item WARPED_HYPHAE = register(new BlockItem(builder(), Blocks.WARPED_HYPHAE));
    public static final Item OAK_LEAVES = register(new BlockItem(builder(), Blocks.OAK_LEAVES));
    public static final Item SPRUCE_LEAVES = register(new BlockItem(builder(), Blocks.SPRUCE_LEAVES));
    public static final Item BIRCH_LEAVES = register(new BlockItem(builder(), Blocks.BIRCH_LEAVES));
    public static final Item JUNGLE_LEAVES = register(new BlockItem(builder(), Blocks.JUNGLE_LEAVES));
    public static final Item ACACIA_LEAVES = register(new BlockItem(builder(), Blocks.ACACIA_LEAVES));
    public static final Item CHERRY_LEAVES = register(new BlockItem(builder(), Blocks.CHERRY_LEAVES));
    public static final Item DARK_OAK_LEAVES = register(new BlockItem(builder(), Blocks.DARK_OAK_LEAVES));
    public static final Item MANGROVE_LEAVES = register(new BlockItem(builder(), Blocks.MANGROVE_LEAVES));
    public static final Item AZALEA_LEAVES = register(new BlockItem(builder(), Blocks.AZALEA_LEAVES));
    public static final Item FLOWERING_AZALEA_LEAVES = register(new BlockItem(builder(), Blocks.FLOWERING_AZALEA_LEAVES));
    public static final Item SPONGE = register(new BlockItem(builder(), Blocks.SPONGE));
    public static final Item WET_SPONGE = register(new BlockItem(builder(), Blocks.WET_SPONGE));
    public static final Item GLASS = register(new BlockItem(builder(), Blocks.GLASS));
    public static final Item TINTED_GLASS = register(new BlockItem(builder(), Blocks.TINTED_GLASS));
    public static final Item LAPIS_BLOCK = register(new BlockItem(builder(), Blocks.LAPIS_BLOCK));
    public static final Item SANDSTONE = register(new BlockItem(builder(), Blocks.SANDSTONE));
    public static final Item CHISELED_SANDSTONE = register(new BlockItem(builder(), Blocks.CHISELED_SANDSTONE));
    public static final Item CUT_SANDSTONE = register(new BlockItem(builder(), Blocks.CUT_SANDSTONE));
    public static final Item COBWEB = register(new BlockItem(builder(), Blocks.COBWEB));
    public static final Item SHORT_GRASS = register(new BlockItem(builder(), Blocks.SHORT_GRASS));
    public static final Item FERN = register(new BlockItem(builder(), Blocks.FERN));
    public static final Item AZALEA = register(new BlockItem(builder(), Blocks.AZALEA));
    public static final Item FLOWERING_AZALEA = register(new BlockItem(builder(), Blocks.FLOWERING_AZALEA));
    public static final Item DEAD_BUSH = register(new BlockItem(builder(), Blocks.DEAD_BUSH));
    public static final Item SEAGRASS = register(new BlockItem(builder(), Blocks.SEAGRASS));
    public static final Item SEA_PICKLE = register(new BlockItem(builder(), Blocks.SEA_PICKLE));
    public static final Item WHITE_WOOL = register(new BlockItem(builder(), Blocks.WHITE_WOOL));
    public static final Item ORANGE_WOOL = register(new BlockItem(builder(), Blocks.ORANGE_WOOL));
    public static final Item MAGENTA_WOOL = register(new BlockItem(builder(), Blocks.MAGENTA_WOOL));
    public static final Item LIGHT_BLUE_WOOL = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_WOOL));
    public static final Item YELLOW_WOOL = register(new BlockItem(builder(), Blocks.YELLOW_WOOL));
    public static final Item LIME_WOOL = register(new BlockItem(builder(), Blocks.LIME_WOOL));
    public static final Item PINK_WOOL = register(new BlockItem(builder(), Blocks.PINK_WOOL));
    public static final Item GRAY_WOOL = register(new BlockItem(builder(), Blocks.GRAY_WOOL));
    public static final Item LIGHT_GRAY_WOOL = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_WOOL));
    public static final Item CYAN_WOOL = register(new BlockItem(builder(), Blocks.CYAN_WOOL));
    public static final Item PURPLE_WOOL = register(new BlockItem(builder(), Blocks.PURPLE_WOOL));
    public static final Item BLUE_WOOL = register(new BlockItem(builder(), Blocks.BLUE_WOOL));
    public static final Item BROWN_WOOL = register(new BlockItem(builder(), Blocks.BROWN_WOOL));
    public static final Item GREEN_WOOL = register(new BlockItem(builder(), Blocks.GREEN_WOOL));
    public static final Item RED_WOOL = register(new BlockItem(builder(), Blocks.RED_WOOL));
    public static final Item BLACK_WOOL = register(new BlockItem(builder(), Blocks.BLACK_WOOL));
    public static final Item DANDELION = register(new BlockItem(builder(), Blocks.DANDELION));
    public static final Item POPPY = register(new BlockItem(builder(), Blocks.POPPY));
    public static final Item BLUE_ORCHID = register(new BlockItem(builder(), Blocks.BLUE_ORCHID));
    public static final Item ALLIUM = register(new BlockItem(builder(), Blocks.ALLIUM));
    public static final Item AZURE_BLUET = register(new BlockItem(builder(), Blocks.AZURE_BLUET));
    public static final Item RED_TULIP = register(new BlockItem(builder(), Blocks.RED_TULIP));
    public static final Item ORANGE_TULIP = register(new BlockItem(builder(), Blocks.ORANGE_TULIP));
    public static final Item WHITE_TULIP = register(new BlockItem(builder(), Blocks.WHITE_TULIP));
    public static final Item PINK_TULIP = register(new BlockItem(builder(), Blocks.PINK_TULIP));
    public static final Item OXEYE_DAISY = register(new BlockItem(builder(), Blocks.OXEYE_DAISY));
    public static final Item CORNFLOWER = register(new BlockItem(builder(), Blocks.CORNFLOWER));
    public static final Item LILY_OF_THE_VALLEY = register(new BlockItem(builder(), Blocks.LILY_OF_THE_VALLEY));
    public static final Item WITHER_ROSE = register(new BlockItem(builder(), Blocks.WITHER_ROSE));
    public static final Item TORCHFLOWER = register(new BlockItem(builder(), Blocks.TORCHFLOWER));
    public static final Item PITCHER_PLANT = register(new BlockItem(builder(), Blocks.PITCHER_PLANT));
    public static final Item SPORE_BLOSSOM = register(new BlockItem(builder(), Blocks.SPORE_BLOSSOM));
    public static final Item BROWN_MUSHROOM = register(new BlockItem(builder(), Blocks.BROWN_MUSHROOM));
    public static final Item RED_MUSHROOM = register(new BlockItem(builder(), Blocks.RED_MUSHROOM));
    public static final Item CRIMSON_FUNGUS = register(new BlockItem(builder(), Blocks.CRIMSON_FUNGUS));
    public static final Item WARPED_FUNGUS = register(new BlockItem(builder(), Blocks.WARPED_FUNGUS));
    public static final Item CRIMSON_ROOTS = register(new BlockItem(builder(), Blocks.CRIMSON_ROOTS));
    public static final Item WARPED_ROOTS = register(new BlockItem(builder(), Blocks.WARPED_ROOTS));
    public static final Item NETHER_SPROUTS = register(new BlockItem(builder(), Blocks.NETHER_SPROUTS));
    public static final Item WEEPING_VINES = register(new BlockItem(builder(), Blocks.WEEPING_VINES));
    public static final Item TWISTING_VINES = register(new BlockItem(builder(), Blocks.TWISTING_VINES));
    public static final Item SUGAR_CANE = register(new BlockItem(builder(), Blocks.SUGAR_CANE));
    public static final Item KELP = register(new BlockItem(builder(), Blocks.KELP));
    public static final Item MOSS_CARPET = register(new BlockItem(builder(), Blocks.MOSS_CARPET));
    public static final Item PINK_PETALS = register(new BlockItem(builder(), Blocks.PINK_PETALS));
    public static final Item MOSS_BLOCK = register(new BlockItem(builder(), Blocks.MOSS_BLOCK));
    public static final Item HANGING_ROOTS = register(new BlockItem(builder(), Blocks.HANGING_ROOTS));
    public static final Item BIG_DRIPLEAF = register(new BlockItem(builder(), Blocks.BIG_DRIPLEAF, Blocks.BIG_DRIPLEAF_STEM));
    public static final Item SMALL_DRIPLEAF = register(new BlockItem(builder(), Blocks.SMALL_DRIPLEAF));
    public static final Item BAMBOO = register(new BlockItem(builder(), Blocks.BAMBOO));
    public static final Item OAK_SLAB = register(new BlockItem(builder(), Blocks.OAK_SLAB));
    public static final Item SPRUCE_SLAB = register(new BlockItem(builder(), Blocks.SPRUCE_SLAB));
    public static final Item BIRCH_SLAB = register(new BlockItem(builder(), Blocks.BIRCH_SLAB));
    public static final Item JUNGLE_SLAB = register(new BlockItem(builder(), Blocks.JUNGLE_SLAB));
    public static final Item ACACIA_SLAB = register(new BlockItem(builder(), Blocks.ACACIA_SLAB));
    public static final Item CHERRY_SLAB = register(new BlockItem(builder(), Blocks.CHERRY_SLAB));
    public static final Item DARK_OAK_SLAB = register(new BlockItem(builder(), Blocks.DARK_OAK_SLAB));
    public static final Item MANGROVE_SLAB = register(new BlockItem(builder(), Blocks.MANGROVE_SLAB));
    public static final Item BAMBOO_SLAB = register(new BlockItem(builder(), Blocks.BAMBOO_SLAB));
    public static final Item BAMBOO_MOSAIC_SLAB = register(new BlockItem(builder(), Blocks.BAMBOO_MOSAIC_SLAB));
    public static final Item CRIMSON_SLAB = register(new BlockItem(builder(), Blocks.CRIMSON_SLAB));
    public static final Item WARPED_SLAB = register(new BlockItem(builder(), Blocks.WARPED_SLAB));
    public static final Item STONE_SLAB = register(new BlockItem(builder(), Blocks.STONE_SLAB));
    public static final Item SMOOTH_STONE_SLAB = register(new BlockItem(builder(), Blocks.SMOOTH_STONE_SLAB));
    public static final Item SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.SANDSTONE_SLAB));
    public static final Item CUT_SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.CUT_SANDSTONE_SLAB));
    public static final Item PETRIFIED_OAK_SLAB = register(new BlockItem(builder(), Blocks.PETRIFIED_OAK_SLAB));
    public static final Item COBBLESTONE_SLAB = register(new BlockItem(builder(), Blocks.COBBLESTONE_SLAB));
    public static final Item BRICK_SLAB = register(new BlockItem(builder(), Blocks.BRICK_SLAB));
    public static final Item STONE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.STONE_BRICK_SLAB));
    public static final Item MUD_BRICK_SLAB = register(new BlockItem(builder(), Blocks.MUD_BRICK_SLAB));
    public static final Item NETHER_BRICK_SLAB = register(new BlockItem(builder(), Blocks.NETHER_BRICK_SLAB));
    public static final Item QUARTZ_SLAB = register(new BlockItem(builder(), Blocks.QUARTZ_SLAB));
    public static final Item RED_SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.RED_SANDSTONE_SLAB));
    public static final Item CUT_RED_SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.CUT_RED_SANDSTONE_SLAB));
    public static final Item PURPUR_SLAB = register(new BlockItem(builder(), Blocks.PURPUR_SLAB));
    public static final Item PRISMARINE_SLAB = register(new BlockItem(builder(), Blocks.PRISMARINE_SLAB));
    public static final Item PRISMARINE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.PRISMARINE_BRICK_SLAB));
    public static final Item DARK_PRISMARINE_SLAB = register(new BlockItem(builder(), Blocks.DARK_PRISMARINE_SLAB));
    public static final Item SMOOTH_QUARTZ = register(new BlockItem(builder(), Blocks.SMOOTH_QUARTZ));
    public static final Item SMOOTH_RED_SANDSTONE = register(new BlockItem(builder(), Blocks.SMOOTH_RED_SANDSTONE));
    public static final Item SMOOTH_SANDSTONE = register(new BlockItem(builder(), Blocks.SMOOTH_SANDSTONE));
    public static final Item SMOOTH_STONE = register(new BlockItem(builder(), Blocks.SMOOTH_STONE));
    public static final Item BRICKS = register(new BlockItem(builder(), Blocks.BRICKS));
    public static final Item BOOKSHELF = register(new BlockItem(builder(), Blocks.BOOKSHELF));
    public static final Item CHISELED_BOOKSHELF = register(new BlockItem(builder(), Blocks.CHISELED_BOOKSHELF));
    public static final Item DECORATED_POT = register(new DecoratedPotItem(builder(), Blocks.DECORATED_POT));
    public static final Item MOSSY_COBBLESTONE = register(new BlockItem(builder(), Blocks.MOSSY_COBBLESTONE));
    public static final Item OBSIDIAN = register(new BlockItem(builder(), Blocks.OBSIDIAN));
    public static final Item TORCH = register(new BlockItem(builder(), Blocks.TORCH, Blocks.WALL_TORCH));
    public static final Item END_ROD = register(new BlockItem(builder(), Blocks.END_ROD));
    public static final Item CHORUS_PLANT = register(new BlockItem(builder(), Blocks.CHORUS_PLANT));
    public static final Item CHORUS_FLOWER = register(new BlockItem(builder(), Blocks.CHORUS_FLOWER));
    public static final Item PURPUR_BLOCK = register(new BlockItem(builder(), Blocks.PURPUR_BLOCK));
    public static final Item PURPUR_PILLAR = register(new BlockItem(builder(), Blocks.PURPUR_PILLAR));
    public static final Item PURPUR_STAIRS = register(new BlockItem(builder(), Blocks.PURPUR_STAIRS));
    public static final Item SPAWNER = register(new BlockItem(builder(), Blocks.SPAWNER));
    public static final Item CHEST = register(new BlockItem(builder(), Blocks.CHEST));
    public static final Item CRAFTING_TABLE = register(new BlockItem(builder(), Blocks.CRAFTING_TABLE));
    public static final Item FARMLAND = register(new BlockItem(builder(), Blocks.FARMLAND));
    public static final Item FURNACE = register(new BlockItem(builder(), Blocks.FURNACE));
    public static final Item LADDER = register(new BlockItem(builder(), Blocks.LADDER));
    public static final Item COBBLESTONE_STAIRS = register(new BlockItem(builder(), Blocks.COBBLESTONE_STAIRS));
    public static final Item SNOW = register(new BlockItem(builder(), Blocks.SNOW));
    public static final Item ICE = register(new BlockItem(builder(), Blocks.ICE));
    public static final Item SNOW_BLOCK = register(new BlockItem(builder(), Blocks.SNOW_BLOCK));
    public static final Item CACTUS = register(new BlockItem(builder(), Blocks.CACTUS));
    public static final Item CLAY = register(new BlockItem(builder(), Blocks.CLAY));
    public static final Item JUKEBOX = register(new BlockItem(builder(), Blocks.JUKEBOX));
    public static final Item OAK_FENCE = register(new BlockItem(builder(), Blocks.OAK_FENCE));
    public static final Item SPRUCE_FENCE = register(new BlockItem(builder(), Blocks.SPRUCE_FENCE));
    public static final Item BIRCH_FENCE = register(new BlockItem(builder(), Blocks.BIRCH_FENCE));
    public static final Item JUNGLE_FENCE = register(new BlockItem(builder(), Blocks.JUNGLE_FENCE));
    public static final Item ACACIA_FENCE = register(new BlockItem(builder(), Blocks.ACACIA_FENCE));
    public static final Item CHERRY_FENCE = register(new BlockItem(builder(), Blocks.CHERRY_FENCE));
    public static final Item DARK_OAK_FENCE = register(new BlockItem(builder(), Blocks.DARK_OAK_FENCE));
    public static final Item MANGROVE_FENCE = register(new BlockItem(builder(), Blocks.MANGROVE_FENCE));
    public static final Item BAMBOO_FENCE = register(new BlockItem(builder(), Blocks.BAMBOO_FENCE));
    public static final Item CRIMSON_FENCE = register(new BlockItem(builder(), Blocks.CRIMSON_FENCE));
    public static final Item WARPED_FENCE = register(new BlockItem(builder(), Blocks.WARPED_FENCE));
    public static final Item PUMPKIN = register(new BlockItem(builder(), Blocks.PUMPKIN));
    public static final Item CARVED_PUMPKIN = register(new BlockItem(builder(), Blocks.CARVED_PUMPKIN));
    public static final Item JACK_O_LANTERN = register(new BlockItem(builder(), Blocks.JACK_O_LANTERN));
    public static final Item NETHERRACK = register(new BlockItem(builder(), Blocks.NETHERRACK));
    public static final Item SOUL_SAND = register(new BlockItem(builder(), Blocks.SOUL_SAND));
    public static final Item SOUL_SOIL = register(new BlockItem(builder(), Blocks.SOUL_SOIL));
    public static final Item BASALT = register(new BlockItem(builder(), Blocks.BASALT));
    public static final Item POLISHED_BASALT = register(new BlockItem(builder(), Blocks.POLISHED_BASALT));
    public static final Item SMOOTH_BASALT = register(new BlockItem(builder(), Blocks.SMOOTH_BASALT));
    public static final Item SOUL_TORCH = register(new BlockItem(builder(), Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH));
    public static final Item GLOWSTONE = register(new BlockItem(builder(), Blocks.GLOWSTONE));
    public static final Item INFESTED_STONE = register(new BlockItem(builder(), Blocks.INFESTED_STONE));
    public static final Item INFESTED_COBBLESTONE = register(new BlockItem(builder(), Blocks.INFESTED_COBBLESTONE));
    public static final Item INFESTED_STONE_BRICKS = register(new BlockItem(builder(), Blocks.INFESTED_STONE_BRICKS));
    public static final Item INFESTED_MOSSY_STONE_BRICKS = register(new BlockItem(builder(), Blocks.INFESTED_MOSSY_STONE_BRICKS));
    public static final Item INFESTED_CRACKED_STONE_BRICKS = register(new BlockItem(builder(), Blocks.INFESTED_CRACKED_STONE_BRICKS));
    public static final Item INFESTED_CHISELED_STONE_BRICKS = register(new BlockItem(builder(), Blocks.INFESTED_CHISELED_STONE_BRICKS));
    public static final Item INFESTED_DEEPSLATE = register(new BlockItem(builder(), Blocks.INFESTED_DEEPSLATE));
    public static final Item STONE_BRICKS = register(new BlockItem(builder(), Blocks.STONE_BRICKS));
    public static final Item MOSSY_STONE_BRICKS = register(new BlockItem(builder(), Blocks.MOSSY_STONE_BRICKS));
    public static final Item CRACKED_STONE_BRICKS = register(new BlockItem(builder(), Blocks.CRACKED_STONE_BRICKS));
    public static final Item CHISELED_STONE_BRICKS = register(new BlockItem(builder(), Blocks.CHISELED_STONE_BRICKS));
    public static final Item PACKED_MUD = register(new BlockItem(builder(), Blocks.PACKED_MUD));
    public static final Item MUD_BRICKS = register(new BlockItem(builder(), Blocks.MUD_BRICKS));
    public static final Item DEEPSLATE_BRICKS = register(new BlockItem(builder(), Blocks.DEEPSLATE_BRICKS));
    public static final Item CRACKED_DEEPSLATE_BRICKS = register(new BlockItem(builder(), Blocks.CRACKED_DEEPSLATE_BRICKS));
    public static final Item DEEPSLATE_TILES = register(new BlockItem(builder(), Blocks.DEEPSLATE_TILES));
    public static final Item CRACKED_DEEPSLATE_TILES = register(new BlockItem(builder(), Blocks.CRACKED_DEEPSLATE_TILES));
    public static final Item CHISELED_DEEPSLATE = register(new BlockItem(builder(), Blocks.CHISELED_DEEPSLATE));
    public static final Item REINFORCED_DEEPSLATE = register(new BlockItem(builder(), Blocks.REINFORCED_DEEPSLATE));
    public static final Item BROWN_MUSHROOM_BLOCK = register(new BlockItem(builder(), Blocks.BROWN_MUSHROOM_BLOCK));
    public static final Item RED_MUSHROOM_BLOCK = register(new BlockItem(builder(), Blocks.RED_MUSHROOM_BLOCK));
    public static final Item MUSHROOM_STEM = register(new BlockItem(builder(), Blocks.MUSHROOM_STEM));
    public static final Item IRON_BARS = register(new BlockItem(builder(), Blocks.IRON_BARS));
    public static final Item CHAIN = register(new BlockItem(builder(), Blocks.CHAIN));
    public static final Item GLASS_PANE = register(new BlockItem(builder(), Blocks.GLASS_PANE));
    public static final Item MELON = register(new BlockItem(builder(), Blocks.MELON));
    public static final Item VINE = register(new BlockItem(builder(), Blocks.VINE));
    public static final Item GLOW_LICHEN = register(new BlockItem(builder(), Blocks.GLOW_LICHEN));
    public static final Item BRICK_STAIRS = register(new BlockItem(builder(), Blocks.BRICK_STAIRS));
    public static final Item STONE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.STONE_BRICK_STAIRS));
    public static final Item MUD_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.MUD_BRICK_STAIRS));
    public static final Item MYCELIUM = register(new BlockItem(builder(), Blocks.MYCELIUM));
    public static final Item LILY_PAD = register(new BlockItem(builder(), Blocks.LILY_PAD));
    public static final Item NETHER_BRICKS = register(new BlockItem(builder(), Blocks.NETHER_BRICKS));
    public static final Item CRACKED_NETHER_BRICKS = register(new BlockItem(builder(), Blocks.CRACKED_NETHER_BRICKS));
    public static final Item CHISELED_NETHER_BRICKS = register(new BlockItem(builder(), Blocks.CHISELED_NETHER_BRICKS));
    public static final Item NETHER_BRICK_FENCE = register(new BlockItem(builder(), Blocks.NETHER_BRICK_FENCE));
    public static final Item NETHER_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.NETHER_BRICK_STAIRS));
    public static final Item SCULK = register(new BlockItem(builder(), Blocks.SCULK));
    public static final Item SCULK_VEIN = register(new BlockItem(builder(), Blocks.SCULK_VEIN));
    public static final Item SCULK_CATALYST = register(new BlockItem(builder(), Blocks.SCULK_CATALYST));
    public static final Item SCULK_SHRIEKER = register(new BlockItem(builder(), Blocks.SCULK_SHRIEKER));
    public static final Item ENCHANTING_TABLE = register(new BlockItem(builder(), Blocks.ENCHANTING_TABLE));
    public static final Item END_PORTAL_FRAME = register(new BlockItem(builder(), Blocks.END_PORTAL_FRAME));
    public static final Item END_STONE = register(new BlockItem(builder(), Blocks.END_STONE));
    public static final Item END_STONE_BRICKS = register(new BlockItem(builder(), Blocks.END_STONE_BRICKS));
    public static final Item DRAGON_EGG = register(new BlockItem(builder(), Blocks.DRAGON_EGG));
    public static final Item SANDSTONE_STAIRS = register(new BlockItem(builder(), Blocks.SANDSTONE_STAIRS));
    public static final Item ENDER_CHEST = register(new BlockItem(builder(), Blocks.ENDER_CHEST));
    public static final Item EMERALD_BLOCK = register(new BlockItem(builder(), Blocks.EMERALD_BLOCK));
    public static final Item OAK_STAIRS = register(new BlockItem(builder(), Blocks.OAK_STAIRS));
    public static final Item SPRUCE_STAIRS = register(new BlockItem(builder(), Blocks.SPRUCE_STAIRS));
    public static final Item BIRCH_STAIRS = register(new BlockItem(builder(), Blocks.BIRCH_STAIRS));
    public static final Item JUNGLE_STAIRS = register(new BlockItem(builder(), Blocks.JUNGLE_STAIRS));
    public static final Item ACACIA_STAIRS = register(new BlockItem(builder(), Blocks.ACACIA_STAIRS));
    public static final Item CHERRY_STAIRS = register(new BlockItem(builder(), Blocks.CHERRY_STAIRS));
    public static final Item DARK_OAK_STAIRS = register(new BlockItem(builder(), Blocks.DARK_OAK_STAIRS));
    public static final Item MANGROVE_STAIRS = register(new BlockItem(builder(), Blocks.MANGROVE_STAIRS));
    public static final Item BAMBOO_STAIRS = register(new BlockItem(builder(), Blocks.BAMBOO_STAIRS));
    public static final Item BAMBOO_MOSAIC_STAIRS = register(new BlockItem(builder(), Blocks.BAMBOO_MOSAIC_STAIRS));
    public static final Item CRIMSON_STAIRS = register(new BlockItem(builder(), Blocks.CRIMSON_STAIRS));
    public static final Item WARPED_STAIRS = register(new BlockItem(builder(), Blocks.WARPED_STAIRS));
    public static final Item COMMAND_BLOCK = register(new BlockItem(builder(), Blocks.COMMAND_BLOCK));
    public static final Item BEACON = register(new BlockItem(builder(), Blocks.BEACON));
    public static final Item COBBLESTONE_WALL = register(new BlockItem(builder(), Blocks.COBBLESTONE_WALL));
    public static final Item MOSSY_COBBLESTONE_WALL = register(new BlockItem(builder(), Blocks.MOSSY_COBBLESTONE_WALL));
    public static final Item BRICK_WALL = register(new BlockItem(builder(), Blocks.BRICK_WALL));
    public static final Item PRISMARINE_WALL = register(new BlockItem(builder(), Blocks.PRISMARINE_WALL));
    public static final Item RED_SANDSTONE_WALL = register(new BlockItem(builder(), Blocks.RED_SANDSTONE_WALL));
    public static final Item MOSSY_STONE_BRICK_WALL = register(new BlockItem(builder(), Blocks.MOSSY_STONE_BRICK_WALL));
    public static final Item GRANITE_WALL = register(new BlockItem(builder(), Blocks.GRANITE_WALL));
    public static final Item STONE_BRICK_WALL = register(new BlockItem(builder(), Blocks.STONE_BRICK_WALL));
    public static final Item MUD_BRICK_WALL = register(new BlockItem(builder(), Blocks.MUD_BRICK_WALL));
    public static final Item NETHER_BRICK_WALL = register(new BlockItem(builder(), Blocks.NETHER_BRICK_WALL));
    public static final Item ANDESITE_WALL = register(new BlockItem(builder(), Blocks.ANDESITE_WALL));
    public static final Item RED_NETHER_BRICK_WALL = register(new BlockItem(builder(), Blocks.RED_NETHER_BRICK_WALL));
    public static final Item SANDSTONE_WALL = register(new BlockItem(builder(), Blocks.SANDSTONE_WALL));
    public static final Item END_STONE_BRICK_WALL = register(new BlockItem(builder(), Blocks.END_STONE_BRICK_WALL));
    public static final Item DIORITE_WALL = register(new BlockItem(builder(), Blocks.DIORITE_WALL));
    public static final Item BLACKSTONE_WALL = register(new BlockItem(builder(), Blocks.BLACKSTONE_WALL));
    public static final Item POLISHED_BLACKSTONE_WALL = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_WALL));
    public static final Item POLISHED_BLACKSTONE_BRICK_WALL = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_BRICK_WALL));
    public static final Item COBBLED_DEEPSLATE_WALL = register(new BlockItem(builder(), Blocks.COBBLED_DEEPSLATE_WALL));
    public static final Item POLISHED_DEEPSLATE_WALL = register(new BlockItem(builder(), Blocks.POLISHED_DEEPSLATE_WALL));
    public static final Item DEEPSLATE_BRICK_WALL = register(new BlockItem(builder(), Blocks.DEEPSLATE_BRICK_WALL));
    public static final Item DEEPSLATE_TILE_WALL = register(new BlockItem(builder(), Blocks.DEEPSLATE_TILE_WALL));
    public static final Item ANVIL = register(new BlockItem(builder(), Blocks.ANVIL));
    public static final Item CHIPPED_ANVIL = register(new BlockItem(builder(), Blocks.CHIPPED_ANVIL));
    public static final Item DAMAGED_ANVIL = register(new BlockItem(builder(), Blocks.DAMAGED_ANVIL));
    public static final Item CHISELED_QUARTZ_BLOCK = register(new BlockItem(builder(), Blocks.CHISELED_QUARTZ_BLOCK));
    public static final Item QUARTZ_BLOCK = register(new BlockItem(builder(), Blocks.QUARTZ_BLOCK));
    public static final Item QUARTZ_BRICKS = register(new BlockItem(builder(), Blocks.QUARTZ_BRICKS));
    public static final Item QUARTZ_PILLAR = register(new BlockItem(builder(), Blocks.QUARTZ_PILLAR));
    public static final Item QUARTZ_STAIRS = register(new BlockItem(builder(), Blocks.QUARTZ_STAIRS));
    public static final Item WHITE_TERRACOTTA = register(new BlockItem(builder(), Blocks.WHITE_TERRACOTTA));
    public static final Item ORANGE_TERRACOTTA = register(new BlockItem(builder(), Blocks.ORANGE_TERRACOTTA));
    public static final Item MAGENTA_TERRACOTTA = register(new BlockItem(builder(), Blocks.MAGENTA_TERRACOTTA));
    public static final Item LIGHT_BLUE_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_TERRACOTTA));
    public static final Item YELLOW_TERRACOTTA = register(new BlockItem(builder(), Blocks.YELLOW_TERRACOTTA));
    public static final Item LIME_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIME_TERRACOTTA));
    public static final Item PINK_TERRACOTTA = register(new BlockItem(builder(), Blocks.PINK_TERRACOTTA));
    public static final Item GRAY_TERRACOTTA = register(new BlockItem(builder(), Blocks.GRAY_TERRACOTTA));
    public static final Item LIGHT_GRAY_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_TERRACOTTA));
    public static final Item CYAN_TERRACOTTA = register(new BlockItem(builder(), Blocks.CYAN_TERRACOTTA));
    public static final Item PURPLE_TERRACOTTA = register(new BlockItem(builder(), Blocks.PURPLE_TERRACOTTA));
    public static final Item BLUE_TERRACOTTA = register(new BlockItem(builder(), Blocks.BLUE_TERRACOTTA));
    public static final Item BROWN_TERRACOTTA = register(new BlockItem(builder(), Blocks.BROWN_TERRACOTTA));
    public static final Item GREEN_TERRACOTTA = register(new BlockItem(builder(), Blocks.GREEN_TERRACOTTA));
    public static final Item RED_TERRACOTTA = register(new BlockItem(builder(), Blocks.RED_TERRACOTTA));
    public static final Item BLACK_TERRACOTTA = register(new BlockItem(builder(), Blocks.BLACK_TERRACOTTA));
    public static final Item BARRIER = register(new BlockItem(builder(), Blocks.BARRIER));
    public static final Item LIGHT = register(new BlockItem(builder(), Blocks.LIGHT));
    public static final Item HAY_BLOCK = register(new BlockItem(builder(), Blocks.HAY_BLOCK));
    public static final Item WHITE_CARPET = register(new BlockItem(builder(), Blocks.WHITE_CARPET));
    public static final Item ORANGE_CARPET = register(new BlockItem(builder(), Blocks.ORANGE_CARPET));
    public static final Item MAGENTA_CARPET = register(new BlockItem(builder(), Blocks.MAGENTA_CARPET));
    public static final Item LIGHT_BLUE_CARPET = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_CARPET));
    public static final Item YELLOW_CARPET = register(new BlockItem(builder(), Blocks.YELLOW_CARPET));
    public static final Item LIME_CARPET = register(new BlockItem(builder(), Blocks.LIME_CARPET));
    public static final Item PINK_CARPET = register(new BlockItem(builder(), Blocks.PINK_CARPET));
    public static final Item GRAY_CARPET = register(new BlockItem(builder(), Blocks.GRAY_CARPET));
    public static final Item LIGHT_GRAY_CARPET = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_CARPET));
    public static final Item CYAN_CARPET = register(new BlockItem(builder(), Blocks.CYAN_CARPET));
    public static final Item PURPLE_CARPET = register(new BlockItem(builder(), Blocks.PURPLE_CARPET));
    public static final Item BLUE_CARPET = register(new BlockItem(builder(), Blocks.BLUE_CARPET));
    public static final Item BROWN_CARPET = register(new BlockItem(builder(), Blocks.BROWN_CARPET));
    public static final Item GREEN_CARPET = register(new BlockItem(builder(), Blocks.GREEN_CARPET));
    public static final Item RED_CARPET = register(new BlockItem(builder(), Blocks.RED_CARPET));
    public static final Item BLACK_CARPET = register(new BlockItem(builder(), Blocks.BLACK_CARPET));
    public static final Item TERRACOTTA = register(new BlockItem(builder(), Blocks.TERRACOTTA));
    public static final Item PACKED_ICE = register(new BlockItem(builder(), Blocks.PACKED_ICE));
    public static final Item DIRT_PATH = register(new BlockItem(builder(), Blocks.DIRT_PATH));
    public static final Item SUNFLOWER = register(new BlockItem(builder(), Blocks.SUNFLOWER));
    public static final Item LILAC = register(new BlockItem(builder(), Blocks.LILAC));
    public static final Item ROSE_BUSH = register(new BlockItem(builder(), Blocks.ROSE_BUSH));
    public static final Item PEONY = register(new BlockItem(builder(), Blocks.PEONY));
    public static final Item TALL_GRASS = register(new BlockItem(builder(), Blocks.TALL_GRASS));
    public static final Item LARGE_FERN = register(new BlockItem(builder(), Blocks.LARGE_FERN));
    public static final Item WHITE_STAINED_GLASS = register(new BlockItem(builder(), Blocks.WHITE_STAINED_GLASS));
    public static final Item ORANGE_STAINED_GLASS = register(new BlockItem(builder(), Blocks.ORANGE_STAINED_GLASS));
    public static final Item MAGENTA_STAINED_GLASS = register(new BlockItem(builder(), Blocks.MAGENTA_STAINED_GLASS));
    public static final Item LIGHT_BLUE_STAINED_GLASS = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_STAINED_GLASS));
    public static final Item YELLOW_STAINED_GLASS = register(new BlockItem(builder(), Blocks.YELLOW_STAINED_GLASS));
    public static final Item LIME_STAINED_GLASS = register(new BlockItem(builder(), Blocks.LIME_STAINED_GLASS));
    public static final Item PINK_STAINED_GLASS = register(new BlockItem(builder(), Blocks.PINK_STAINED_GLASS));
    public static final Item GRAY_STAINED_GLASS = register(new BlockItem(builder(), Blocks.GRAY_STAINED_GLASS));
    public static final Item LIGHT_GRAY_STAINED_GLASS = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_STAINED_GLASS));
    public static final Item CYAN_STAINED_GLASS = register(new BlockItem(builder(), Blocks.CYAN_STAINED_GLASS));
    public static final Item PURPLE_STAINED_GLASS = register(new BlockItem(builder(), Blocks.PURPLE_STAINED_GLASS));
    public static final Item BLUE_STAINED_GLASS = register(new BlockItem(builder(), Blocks.BLUE_STAINED_GLASS));
    public static final Item BROWN_STAINED_GLASS = register(new BlockItem(builder(), Blocks.BROWN_STAINED_GLASS));
    public static final Item GREEN_STAINED_GLASS = register(new BlockItem(builder(), Blocks.GREEN_STAINED_GLASS));
    public static final Item RED_STAINED_GLASS = register(new BlockItem(builder(), Blocks.RED_STAINED_GLASS));
    public static final Item BLACK_STAINED_GLASS = register(new BlockItem(builder(), Blocks.BLACK_STAINED_GLASS));
    public static final Item WHITE_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.WHITE_STAINED_GLASS_PANE));
    public static final Item ORANGE_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.ORANGE_STAINED_GLASS_PANE));
    public static final Item MAGENTA_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.MAGENTA_STAINED_GLASS_PANE));
    public static final Item LIGHT_BLUE_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_STAINED_GLASS_PANE));
    public static final Item YELLOW_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.YELLOW_STAINED_GLASS_PANE));
    public static final Item LIME_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.LIME_STAINED_GLASS_PANE));
    public static final Item PINK_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.PINK_STAINED_GLASS_PANE));
    public static final Item GRAY_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.GRAY_STAINED_GLASS_PANE));
    public static final Item LIGHT_GRAY_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_STAINED_GLASS_PANE));
    public static final Item CYAN_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.CYAN_STAINED_GLASS_PANE));
    public static final Item PURPLE_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.PURPLE_STAINED_GLASS_PANE));
    public static final Item BLUE_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.BLUE_STAINED_GLASS_PANE));
    public static final Item BROWN_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.BROWN_STAINED_GLASS_PANE));
    public static final Item GREEN_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.GREEN_STAINED_GLASS_PANE));
    public static final Item RED_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.RED_STAINED_GLASS_PANE));
    public static final Item BLACK_STAINED_GLASS_PANE = register(new BlockItem(builder(), Blocks.BLACK_STAINED_GLASS_PANE));
    public static final Item PRISMARINE = register(new BlockItem(builder(), Blocks.PRISMARINE));
    public static final Item PRISMARINE_BRICKS = register(new BlockItem(builder(), Blocks.PRISMARINE_BRICKS));
    public static final Item DARK_PRISMARINE = register(new BlockItem(builder(), Blocks.DARK_PRISMARINE));
    public static final Item PRISMARINE_STAIRS = register(new BlockItem(builder(), Blocks.PRISMARINE_STAIRS));
    public static final Item PRISMARINE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.PRISMARINE_BRICK_STAIRS));
    public static final Item DARK_PRISMARINE_STAIRS = register(new BlockItem(builder(), Blocks.DARK_PRISMARINE_STAIRS));
    public static final Item SEA_LANTERN = register(new BlockItem(builder(), Blocks.SEA_LANTERN));
    public static final Item RED_SANDSTONE = register(new BlockItem(builder(), Blocks.RED_SANDSTONE));
    public static final Item CHISELED_RED_SANDSTONE = register(new BlockItem(builder(), Blocks.CHISELED_RED_SANDSTONE));
    public static final Item CUT_RED_SANDSTONE = register(new BlockItem(builder(), Blocks.CUT_RED_SANDSTONE));
    public static final Item RED_SANDSTONE_STAIRS = register(new BlockItem(builder(), Blocks.RED_SANDSTONE_STAIRS));
    public static final Item REPEATING_COMMAND_BLOCK = register(new BlockItem(builder(), Blocks.REPEATING_COMMAND_BLOCK));
    public static final Item CHAIN_COMMAND_BLOCK = register(new BlockItem(builder(), Blocks.CHAIN_COMMAND_BLOCK));
    public static final Item MAGMA_BLOCK = register(new BlockItem(builder(), Blocks.MAGMA_BLOCK));
    public static final Item NETHER_WART_BLOCK = register(new BlockItem(builder(), Blocks.NETHER_WART_BLOCK));
    public static final Item WARPED_WART_BLOCK = register(new BlockItem(builder(), Blocks.WARPED_WART_BLOCK));
    public static final Item RED_NETHER_BRICKS = register(new BlockItem(builder(), Blocks.RED_NETHER_BRICKS));
    public static final Item BONE_BLOCK = register(new BlockItem(builder(), Blocks.BONE_BLOCK));
    public static final Item STRUCTURE_VOID = register(new BlockItem(builder(), Blocks.STRUCTURE_VOID));
    public static final Item SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.SHULKER_BOX));
    public static final Item WHITE_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.WHITE_SHULKER_BOX));
    public static final Item ORANGE_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.ORANGE_SHULKER_BOX));
    public static final Item MAGENTA_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.MAGENTA_SHULKER_BOX));
    public static final Item LIGHT_BLUE_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.LIGHT_BLUE_SHULKER_BOX));
    public static final Item YELLOW_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.YELLOW_SHULKER_BOX));
    public static final Item LIME_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.LIME_SHULKER_BOX));
    public static final Item PINK_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.PINK_SHULKER_BOX));
    public static final Item GRAY_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.GRAY_SHULKER_BOX));
    public static final Item LIGHT_GRAY_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.LIGHT_GRAY_SHULKER_BOX));
    public static final Item CYAN_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.CYAN_SHULKER_BOX));
    public static final Item PURPLE_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.PURPLE_SHULKER_BOX));
    public static final Item BLUE_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.BLUE_SHULKER_BOX));
    public static final Item BROWN_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.BROWN_SHULKER_BOX));
    public static final Item GREEN_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.GREEN_SHULKER_BOX));
    public static final Item RED_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.RED_SHULKER_BOX));
    public static final Item BLACK_SHULKER_BOX = register(new ShulkerBoxItem(builder().stackSize(1), Blocks.BLACK_SHULKER_BOX));
    public static final Item WHITE_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.WHITE_GLAZED_TERRACOTTA));
    public static final Item ORANGE_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.ORANGE_GLAZED_TERRACOTTA));
    public static final Item MAGENTA_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.MAGENTA_GLAZED_TERRACOTTA));
    public static final Item LIGHT_BLUE_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA));
    public static final Item YELLOW_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.YELLOW_GLAZED_TERRACOTTA));
    public static final Item LIME_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIME_GLAZED_TERRACOTTA));
    public static final Item PINK_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.PINK_GLAZED_TERRACOTTA));
    public static final Item GRAY_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.GRAY_GLAZED_TERRACOTTA));
    public static final Item LIGHT_GRAY_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA));
    public static final Item CYAN_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.CYAN_GLAZED_TERRACOTTA));
    public static final Item PURPLE_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.PURPLE_GLAZED_TERRACOTTA));
    public static final Item BLUE_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.BLUE_GLAZED_TERRACOTTA));
    public static final Item BROWN_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.BROWN_GLAZED_TERRACOTTA));
    public static final Item GREEN_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.GREEN_GLAZED_TERRACOTTA));
    public static final Item RED_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.RED_GLAZED_TERRACOTTA));
    public static final Item BLACK_GLAZED_TERRACOTTA = register(new BlockItem(builder(), Blocks.BLACK_GLAZED_TERRACOTTA));
    public static final Item WHITE_CONCRETE = register(new BlockItem(builder(), Blocks.WHITE_CONCRETE));
    public static final Item ORANGE_CONCRETE = register(new BlockItem(builder(), Blocks.ORANGE_CONCRETE));
    public static final Item MAGENTA_CONCRETE = register(new BlockItem(builder(), Blocks.MAGENTA_CONCRETE));
    public static final Item LIGHT_BLUE_CONCRETE = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_CONCRETE));
    public static final Item YELLOW_CONCRETE = register(new BlockItem(builder(), Blocks.YELLOW_CONCRETE));
    public static final Item LIME_CONCRETE = register(new BlockItem(builder(), Blocks.LIME_CONCRETE));
    public static final Item PINK_CONCRETE = register(new BlockItem(builder(), Blocks.PINK_CONCRETE));
    public static final Item GRAY_CONCRETE = register(new BlockItem(builder(), Blocks.GRAY_CONCRETE));
    public static final Item LIGHT_GRAY_CONCRETE = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_CONCRETE));
    public static final Item CYAN_CONCRETE = register(new BlockItem(builder(), Blocks.CYAN_CONCRETE));
    public static final Item PURPLE_CONCRETE = register(new BlockItem(builder(), Blocks.PURPLE_CONCRETE));
    public static final Item BLUE_CONCRETE = register(new BlockItem(builder(), Blocks.BLUE_CONCRETE));
    public static final Item BROWN_CONCRETE = register(new BlockItem(builder(), Blocks.BROWN_CONCRETE));
    public static final Item GREEN_CONCRETE = register(new BlockItem(builder(), Blocks.GREEN_CONCRETE));
    public static final Item RED_CONCRETE = register(new BlockItem(builder(), Blocks.RED_CONCRETE));
    public static final Item BLACK_CONCRETE = register(new BlockItem(builder(), Blocks.BLACK_CONCRETE));
    public static final Item WHITE_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.WHITE_CONCRETE_POWDER));
    public static final Item ORANGE_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.ORANGE_CONCRETE_POWDER));
    public static final Item MAGENTA_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.MAGENTA_CONCRETE_POWDER));
    public static final Item LIGHT_BLUE_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_CONCRETE_POWDER));
    public static final Item YELLOW_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.YELLOW_CONCRETE_POWDER));
    public static final Item LIME_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.LIME_CONCRETE_POWDER));
    public static final Item PINK_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.PINK_CONCRETE_POWDER));
    public static final Item GRAY_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.GRAY_CONCRETE_POWDER));
    public static final Item LIGHT_GRAY_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_CONCRETE_POWDER));
    public static final Item CYAN_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.CYAN_CONCRETE_POWDER));
    public static final Item PURPLE_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.PURPLE_CONCRETE_POWDER));
    public static final Item BLUE_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.BLUE_CONCRETE_POWDER));
    public static final Item BROWN_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.BROWN_CONCRETE_POWDER));
    public static final Item GREEN_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.GREEN_CONCRETE_POWDER));
    public static final Item RED_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.RED_CONCRETE_POWDER));
    public static final Item BLACK_CONCRETE_POWDER = register(new BlockItem(builder(), Blocks.BLACK_CONCRETE_POWDER));
    public static final Item TURTLE_EGG = register(new BlockItem(builder(), Blocks.TURTLE_EGG));
    public static final Item SNIFFER_EGG = register(new BlockItem(builder(), Blocks.SNIFFER_EGG));
    public static final Item DEAD_TUBE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.DEAD_TUBE_CORAL_BLOCK));
    public static final Item DEAD_BRAIN_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.DEAD_BRAIN_CORAL_BLOCK));
    public static final Item DEAD_BUBBLE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.DEAD_BUBBLE_CORAL_BLOCK));
    public static final Item DEAD_FIRE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.DEAD_FIRE_CORAL_BLOCK));
    public static final Item DEAD_HORN_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.DEAD_HORN_CORAL_BLOCK));
    public static final Item TUBE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.TUBE_CORAL_BLOCK));
    public static final Item BRAIN_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.BRAIN_CORAL_BLOCK));
    public static final Item BUBBLE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.BUBBLE_CORAL_BLOCK));
    public static final Item FIRE_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.FIRE_CORAL_BLOCK));
    public static final Item HORN_CORAL_BLOCK = register(new BlockItem(builder(), Blocks.HORN_CORAL_BLOCK));
    public static final Item TUBE_CORAL = register(new BlockItem(builder(), Blocks.TUBE_CORAL));
    public static final Item BRAIN_CORAL = register(new BlockItem(builder(), Blocks.BRAIN_CORAL));
    public static final Item BUBBLE_CORAL = register(new BlockItem(builder(), Blocks.BUBBLE_CORAL));
    public static final Item FIRE_CORAL = register(new BlockItem(builder(), Blocks.FIRE_CORAL));
    public static final Item HORN_CORAL = register(new BlockItem(builder(), Blocks.HORN_CORAL));
    public static final Item DEAD_BRAIN_CORAL = register(new BlockItem(builder(), Blocks.DEAD_BRAIN_CORAL));
    public static final Item DEAD_BUBBLE_CORAL = register(new BlockItem(builder(), Blocks.DEAD_BUBBLE_CORAL));
    public static final Item DEAD_FIRE_CORAL = register(new BlockItem(builder(), Blocks.DEAD_FIRE_CORAL));
    public static final Item DEAD_HORN_CORAL = register(new BlockItem(builder(), Blocks.DEAD_HORN_CORAL));
    public static final Item DEAD_TUBE_CORAL = register(new BlockItem(builder(), Blocks.DEAD_TUBE_CORAL));
    public static final Item TUBE_CORAL_FAN = register(new BlockItem(builder(), Blocks.TUBE_CORAL_FAN, Blocks.TUBE_CORAL_WALL_FAN));
    public static final Item BRAIN_CORAL_FAN = register(new BlockItem(builder(), Blocks.BRAIN_CORAL_FAN, Blocks.BRAIN_CORAL_WALL_FAN));
    public static final Item BUBBLE_CORAL_FAN = register(new BlockItem(builder(), Blocks.BUBBLE_CORAL_FAN, Blocks.BUBBLE_CORAL_WALL_FAN));
    public static final Item FIRE_CORAL_FAN = register(new BlockItem(builder(), Blocks.FIRE_CORAL_FAN, Blocks.FIRE_CORAL_WALL_FAN));
    public static final Item HORN_CORAL_FAN = register(new BlockItem(builder(), Blocks.HORN_CORAL_FAN, Blocks.HORN_CORAL_WALL_FAN));
    public static final Item DEAD_TUBE_CORAL_FAN = register(new BlockItem(builder(), Blocks.DEAD_TUBE_CORAL_FAN, Blocks.DEAD_TUBE_CORAL_WALL_FAN));
    public static final Item DEAD_BRAIN_CORAL_FAN = register(new BlockItem(builder(), Blocks.DEAD_BRAIN_CORAL_FAN, Blocks.DEAD_BRAIN_CORAL_WALL_FAN));
    public static final Item DEAD_BUBBLE_CORAL_FAN = register(new BlockItem(builder(), Blocks.DEAD_BUBBLE_CORAL_FAN, Blocks.DEAD_BUBBLE_CORAL_WALL_FAN));
    public static final Item DEAD_FIRE_CORAL_FAN = register(new BlockItem(builder(), Blocks.DEAD_FIRE_CORAL_FAN, Blocks.DEAD_FIRE_CORAL_WALL_FAN));
    public static final Item DEAD_HORN_CORAL_FAN = register(new BlockItem(builder(), Blocks.DEAD_HORN_CORAL_FAN, Blocks.DEAD_HORN_CORAL_WALL_FAN));
    public static final Item BLUE_ICE = register(new BlockItem(builder(), Blocks.BLUE_ICE));
    public static final Item CONDUIT = register(new BlockItem(builder(), Blocks.CONDUIT));
    public static final Item POLISHED_GRANITE_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_GRANITE_STAIRS));
    public static final Item SMOOTH_RED_SANDSTONE_STAIRS = register(new BlockItem(builder(), Blocks.SMOOTH_RED_SANDSTONE_STAIRS));
    public static final Item MOSSY_STONE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.MOSSY_STONE_BRICK_STAIRS));
    public static final Item POLISHED_DIORITE_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_DIORITE_STAIRS));
    public static final Item MOSSY_COBBLESTONE_STAIRS = register(new BlockItem(builder(), Blocks.MOSSY_COBBLESTONE_STAIRS));
    public static final Item END_STONE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.END_STONE_BRICK_STAIRS));
    public static final Item STONE_STAIRS = register(new BlockItem(builder(), Blocks.STONE_STAIRS));
    public static final Item SMOOTH_SANDSTONE_STAIRS = register(new BlockItem(builder(), Blocks.SMOOTH_SANDSTONE_STAIRS));
    public static final Item SMOOTH_QUARTZ_STAIRS = register(new BlockItem(builder(), Blocks.SMOOTH_QUARTZ_STAIRS));
    public static final Item GRANITE_STAIRS = register(new BlockItem(builder(), Blocks.GRANITE_STAIRS));
    public static final Item ANDESITE_STAIRS = register(new BlockItem(builder(), Blocks.ANDESITE_STAIRS));
    public static final Item RED_NETHER_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.RED_NETHER_BRICK_STAIRS));
    public static final Item POLISHED_ANDESITE_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_ANDESITE_STAIRS));
    public static final Item DIORITE_STAIRS = register(new BlockItem(builder(), Blocks.DIORITE_STAIRS));
    public static final Item COBBLED_DEEPSLATE_STAIRS = register(new BlockItem(builder(), Blocks.COBBLED_DEEPSLATE_STAIRS));
    public static final Item POLISHED_DEEPSLATE_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_DEEPSLATE_STAIRS));
    public static final Item DEEPSLATE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.DEEPSLATE_BRICK_STAIRS));
    public static final Item DEEPSLATE_TILE_STAIRS = register(new BlockItem(builder(), Blocks.DEEPSLATE_TILE_STAIRS));
    public static final Item POLISHED_GRANITE_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_GRANITE_SLAB));
    public static final Item SMOOTH_RED_SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.SMOOTH_RED_SANDSTONE_SLAB));
    public static final Item MOSSY_STONE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.MOSSY_STONE_BRICK_SLAB));
    public static final Item POLISHED_DIORITE_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_DIORITE_SLAB));
    public static final Item MOSSY_COBBLESTONE_SLAB = register(new BlockItem(builder(), Blocks.MOSSY_COBBLESTONE_SLAB));
    public static final Item END_STONE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.END_STONE_BRICK_SLAB));
    public static final Item SMOOTH_SANDSTONE_SLAB = register(new BlockItem(builder(), Blocks.SMOOTH_SANDSTONE_SLAB));
    public static final Item SMOOTH_QUARTZ_SLAB = register(new BlockItem(builder(), Blocks.SMOOTH_QUARTZ_SLAB));
    public static final Item GRANITE_SLAB = register(new BlockItem(builder(), Blocks.GRANITE_SLAB));
    public static final Item ANDESITE_SLAB = register(new BlockItem(builder(), Blocks.ANDESITE_SLAB));
    public static final Item RED_NETHER_BRICK_SLAB = register(new BlockItem(builder(), Blocks.RED_NETHER_BRICK_SLAB));
    public static final Item POLISHED_ANDESITE_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_ANDESITE_SLAB));
    public static final Item DIORITE_SLAB = register(new BlockItem(builder(), Blocks.DIORITE_SLAB));
    public static final Item COBBLED_DEEPSLATE_SLAB = register(new BlockItem(builder(), Blocks.COBBLED_DEEPSLATE_SLAB));
    public static final Item POLISHED_DEEPSLATE_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_DEEPSLATE_SLAB));
    public static final Item DEEPSLATE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.DEEPSLATE_BRICK_SLAB));
    public static final Item DEEPSLATE_TILE_SLAB = register(new BlockItem(builder(), Blocks.DEEPSLATE_TILE_SLAB));
    public static final Item SCAFFOLDING = register(new BlockItem(builder(), Blocks.SCAFFOLDING));
    public static final Item REDSTONE = register(new BlockItem("redstone", builder(), Blocks.REDSTONE_WIRE));
    public static final Item REDSTONE_TORCH = register(new BlockItem(builder(), Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH));
    public static final Item REDSTONE_BLOCK = register(new BlockItem(builder(), Blocks.REDSTONE_BLOCK));
    public static final Item REPEATER = register(new BlockItem(builder(), Blocks.REPEATER));
    public static final Item COMPARATOR = register(new BlockItem(builder(), Blocks.COMPARATOR));
    public static final Item PISTON = register(new BlockItem(builder(), Blocks.PISTON));
    public static final Item STICKY_PISTON = register(new BlockItem(builder(), Blocks.STICKY_PISTON));
    public static final Item SLIME_BLOCK = register(new BlockItem(builder(), Blocks.SLIME_BLOCK));
    public static final Item HONEY_BLOCK = register(new BlockItem(builder(), Blocks.HONEY_BLOCK));
    public static final Item OBSERVER = register(new BlockItem(builder(), Blocks.OBSERVER));
    public static final Item HOPPER = register(new BlockItem(builder(), Blocks.HOPPER));
    public static final Item DISPENSER = register(new BlockItem(builder(), Blocks.DISPENSER));
    public static final Item DROPPER = register(new BlockItem(builder(), Blocks.DROPPER));
    public static final Item LECTERN = register(new BlockItem(builder(), Blocks.LECTERN));
    public static final Item TARGET = register(new BlockItem(builder(), Blocks.TARGET));
    public static final Item LEVER = register(new BlockItem(builder(), Blocks.LEVER));
    public static final Item LIGHTNING_ROD = register(new BlockItem(builder(), Blocks.LIGHTNING_ROD));
    public static final Item DAYLIGHT_DETECTOR = register(new BlockItem(builder(), Blocks.DAYLIGHT_DETECTOR));
    public static final Item SCULK_SENSOR = register(new BlockItem(builder(), Blocks.SCULK_SENSOR));
    public static final Item CALIBRATED_SCULK_SENSOR = register(new BlockItem(builder(), Blocks.CALIBRATED_SCULK_SENSOR));
    public static final Item TRIPWIRE_HOOK = register(new BlockItem(builder(), Blocks.TRIPWIRE_HOOK));
    public static final Item TRAPPED_CHEST = register(new BlockItem(builder(), Blocks.TRAPPED_CHEST));
    public static final Item TNT = register(new BlockItem(builder(), Blocks.TNT));
    public static final Item REDSTONE_LAMP = register(new BlockItem(builder(), Blocks.REDSTONE_LAMP));
    public static final Item NOTE_BLOCK = register(new BlockItem(builder(), Blocks.NOTE_BLOCK));
    public static final Item STONE_BUTTON = register(new BlockItem(builder(), Blocks.STONE_BUTTON));
    public static final Item POLISHED_BLACKSTONE_BUTTON = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_BUTTON));
    public static final Item OAK_BUTTON = register(new BlockItem(builder(), Blocks.OAK_BUTTON));
    public static final Item SPRUCE_BUTTON = register(new BlockItem(builder(), Blocks.SPRUCE_BUTTON));
    public static final Item BIRCH_BUTTON = register(new BlockItem(builder(), Blocks.BIRCH_BUTTON));
    public static final Item JUNGLE_BUTTON = register(new BlockItem(builder(), Blocks.JUNGLE_BUTTON));
    public static final Item ACACIA_BUTTON = register(new BlockItem(builder(), Blocks.ACACIA_BUTTON));
    public static final Item CHERRY_BUTTON = register(new BlockItem(builder(), Blocks.CHERRY_BUTTON));
    public static final Item DARK_OAK_BUTTON = register(new BlockItem(builder(), Blocks.DARK_OAK_BUTTON));
    public static final Item MANGROVE_BUTTON = register(new BlockItem(builder(), Blocks.MANGROVE_BUTTON));
    public static final Item BAMBOO_BUTTON = register(new BlockItem(builder(), Blocks.BAMBOO_BUTTON));
    public static final Item CRIMSON_BUTTON = register(new BlockItem(builder(), Blocks.CRIMSON_BUTTON));
    public static final Item WARPED_BUTTON = register(new BlockItem(builder(), Blocks.WARPED_BUTTON));
    public static final Item STONE_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.STONE_PRESSURE_PLATE));
    public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE));
    public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE));
    public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE));
    public static final Item OAK_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.OAK_PRESSURE_PLATE));
    public static final Item SPRUCE_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.SPRUCE_PRESSURE_PLATE));
    public static final Item BIRCH_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.BIRCH_PRESSURE_PLATE));
    public static final Item JUNGLE_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.JUNGLE_PRESSURE_PLATE));
    public static final Item ACACIA_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.ACACIA_PRESSURE_PLATE));
    public static final Item CHERRY_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.CHERRY_PRESSURE_PLATE));
    public static final Item DARK_OAK_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.DARK_OAK_PRESSURE_PLATE));
    public static final Item MANGROVE_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.MANGROVE_PRESSURE_PLATE));
    public static final Item BAMBOO_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.BAMBOO_PRESSURE_PLATE));
    public static final Item CRIMSON_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.CRIMSON_PRESSURE_PLATE));
    public static final Item WARPED_PRESSURE_PLATE = register(new BlockItem(builder(), Blocks.WARPED_PRESSURE_PLATE));
    public static final Item IRON_DOOR = register(new BlockItem(builder(), Blocks.IRON_DOOR));
    public static final Item OAK_DOOR = register(new BlockItem(builder(), Blocks.OAK_DOOR));
    public static final Item SPRUCE_DOOR = register(new BlockItem(builder(), Blocks.SPRUCE_DOOR));
    public static final Item BIRCH_DOOR = register(new BlockItem(builder(), Blocks.BIRCH_DOOR));
    public static final Item JUNGLE_DOOR = register(new BlockItem(builder(), Blocks.JUNGLE_DOOR));
    public static final Item ACACIA_DOOR = register(new BlockItem(builder(), Blocks.ACACIA_DOOR));
    public static final Item CHERRY_DOOR = register(new BlockItem(builder(), Blocks.CHERRY_DOOR));
    public static final Item DARK_OAK_DOOR = register(new BlockItem(builder(), Blocks.DARK_OAK_DOOR));
    public static final Item MANGROVE_DOOR = register(new BlockItem(builder(), Blocks.MANGROVE_DOOR));
    public static final Item BAMBOO_DOOR = register(new BlockItem(builder(), Blocks.BAMBOO_DOOR));
    public static final Item CRIMSON_DOOR = register(new BlockItem(builder(), Blocks.CRIMSON_DOOR));
    public static final Item WARPED_DOOR = register(new BlockItem(builder(), Blocks.WARPED_DOOR));
    public static final Item COPPER_DOOR = register(new BlockItem(builder(), Blocks.COPPER_DOOR));
    public static final Item EXPOSED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.EXPOSED_COPPER_DOOR));
    public static final Item WEATHERED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.WEATHERED_COPPER_DOOR));
    public static final Item OXIDIZED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.OXIDIZED_COPPER_DOOR));
    public static final Item WAXED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.WAXED_COPPER_DOOR));
    public static final Item WAXED_EXPOSED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_COPPER_DOOR));
    public static final Item WAXED_WEATHERED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_COPPER_DOOR));
    public static final Item WAXED_OXIDIZED_COPPER_DOOR = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_COPPER_DOOR));
    public static final Item IRON_TRAPDOOR = register(new BlockItem(builder(), Blocks.IRON_TRAPDOOR));
    public static final Item OAK_TRAPDOOR = register(new BlockItem(builder(), Blocks.OAK_TRAPDOOR));
    public static final Item SPRUCE_TRAPDOOR = register(new BlockItem(builder(), Blocks.SPRUCE_TRAPDOOR));
    public static final Item BIRCH_TRAPDOOR = register(new BlockItem(builder(), Blocks.BIRCH_TRAPDOOR));
    public static final Item JUNGLE_TRAPDOOR = register(new BlockItem(builder(), Blocks.JUNGLE_TRAPDOOR));
    public static final Item ACACIA_TRAPDOOR = register(new BlockItem(builder(), Blocks.ACACIA_TRAPDOOR));
    public static final Item CHERRY_TRAPDOOR = register(new BlockItem(builder(), Blocks.CHERRY_TRAPDOOR));
    public static final Item DARK_OAK_TRAPDOOR = register(new BlockItem(builder(), Blocks.DARK_OAK_TRAPDOOR));
    public static final Item MANGROVE_TRAPDOOR = register(new BlockItem(builder(), Blocks.MANGROVE_TRAPDOOR));
    public static final Item BAMBOO_TRAPDOOR = register(new BlockItem(builder(), Blocks.BAMBOO_TRAPDOOR));
    public static final Item CRIMSON_TRAPDOOR = register(new BlockItem(builder(), Blocks.CRIMSON_TRAPDOOR));
    public static final Item WARPED_TRAPDOOR = register(new BlockItem(builder(), Blocks.WARPED_TRAPDOOR));
    public static final Item COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.COPPER_TRAPDOOR));
    public static final Item EXPOSED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.EXPOSED_COPPER_TRAPDOOR));
    public static final Item WEATHERED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.WEATHERED_COPPER_TRAPDOOR));
    public static final Item OXIDIZED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.OXIDIZED_COPPER_TRAPDOOR));
    public static final Item WAXED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.WAXED_COPPER_TRAPDOOR));
    public static final Item WAXED_EXPOSED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_COPPER_TRAPDOOR));
    public static final Item WAXED_WEATHERED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_COPPER_TRAPDOOR));
    public static final Item WAXED_OXIDIZED_COPPER_TRAPDOOR = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_COPPER_TRAPDOOR));
    public static final Item OAK_FENCE_GATE = register(new BlockItem(builder(), Blocks.OAK_FENCE_GATE));
    public static final Item SPRUCE_FENCE_GATE = register(new BlockItem(builder(), Blocks.SPRUCE_FENCE_GATE));
    public static final Item BIRCH_FENCE_GATE = register(new BlockItem(builder(), Blocks.BIRCH_FENCE_GATE));
    public static final Item JUNGLE_FENCE_GATE = register(new BlockItem(builder(), Blocks.JUNGLE_FENCE_GATE));
    public static final Item ACACIA_FENCE_GATE = register(new BlockItem(builder(), Blocks.ACACIA_FENCE_GATE));
    public static final Item CHERRY_FENCE_GATE = register(new BlockItem(builder(), Blocks.CHERRY_FENCE_GATE));
    public static final Item DARK_OAK_FENCE_GATE = register(new BlockItem(builder(), Blocks.DARK_OAK_FENCE_GATE));
    public static final Item MANGROVE_FENCE_GATE = register(new BlockItem(builder(), Blocks.MANGROVE_FENCE_GATE));
    public static final Item BAMBOO_FENCE_GATE = register(new BlockItem(builder(), Blocks.BAMBOO_FENCE_GATE));
    public static final Item CRIMSON_FENCE_GATE = register(new BlockItem(builder(), Blocks.CRIMSON_FENCE_GATE));
    public static final Item WARPED_FENCE_GATE = register(new BlockItem(builder(), Blocks.WARPED_FENCE_GATE));
    public static final Item POWERED_RAIL = register(new BlockItem(builder(), Blocks.POWERED_RAIL));
    public static final Item DETECTOR_RAIL = register(new BlockItem(builder(), Blocks.DETECTOR_RAIL));
    public static final Item RAIL = register(new BlockItem(builder(), Blocks.RAIL));
    public static final Item ACTIVATOR_RAIL = register(new BlockItem(builder(), Blocks.ACTIVATOR_RAIL));
    public static final Item SADDLE = register(new Item("saddle", builder().stackSize(1)));
    public static final Item MINECART = register(new Item("minecart", builder().stackSize(1)));
    public static final Item CHEST_MINECART = register(new Item("chest_minecart", builder().stackSize(1)));
    public static final Item FURNACE_MINECART = register(new Item("furnace_minecart", builder().stackSize(1)));
    public static final Item TNT_MINECART = register(new Item("tnt_minecart", builder().stackSize(1)));
    public static final Item HOPPER_MINECART = register(new Item("hopper_minecart", builder().stackSize(1)));
    public static final Item CARROT_ON_A_STICK = register(new Item("carrot_on_a_stick", builder().stackSize(1).maxDamage(25)));
    public static final Item WARPED_FUNGUS_ON_A_STICK = register(new Item("warped_fungus_on_a_stick", builder().stackSize(1).maxDamage(100)));
    public static final Item ELYTRA = register(new ElytraItem("elytra", builder().stackSize(1).maxDamage(432)));
    public static final Item OAK_BOAT = register(new BoatItem("oak_boat", builder().stackSize(1)));
    public static final Item OAK_CHEST_BOAT = register(new BoatItem("oak_chest_boat", builder().stackSize(1)));
    public static final Item SPRUCE_BOAT = register(new BoatItem("spruce_boat", builder().stackSize(1)));
    public static final Item SPRUCE_CHEST_BOAT = register(new BoatItem("spruce_chest_boat", builder().stackSize(1)));
    public static final Item BIRCH_BOAT = register(new BoatItem("birch_boat", builder().stackSize(1)));
    public static final Item BIRCH_CHEST_BOAT = register(new BoatItem("birch_chest_boat", builder().stackSize(1)));
    public static final Item JUNGLE_BOAT = register(new BoatItem("jungle_boat", builder().stackSize(1)));
    public static final Item JUNGLE_CHEST_BOAT = register(new BoatItem("jungle_chest_boat", builder().stackSize(1)));
    public static final Item ACACIA_BOAT = register(new BoatItem("acacia_boat", builder().stackSize(1)));
    public static final Item ACACIA_CHEST_BOAT = register(new BoatItem("acacia_chest_boat", builder().stackSize(1)));
    public static final Item CHERRY_BOAT = register(new BoatItem("cherry_boat", builder().stackSize(1)));
    public static final Item CHERRY_CHEST_BOAT = register(new BoatItem("cherry_chest_boat", builder().stackSize(1)));
    public static final Item DARK_OAK_BOAT = register(new BoatItem("dark_oak_boat", builder().stackSize(1)));
    public static final Item DARK_OAK_CHEST_BOAT = register(new BoatItem("dark_oak_chest_boat", builder().stackSize(1)));
    public static final Item MANGROVE_BOAT = register(new BoatItem("mangrove_boat", builder().stackSize(1)));
    public static final Item MANGROVE_CHEST_BOAT = register(new BoatItem("mangrove_chest_boat", builder().stackSize(1)));
    public static final Item BAMBOO_RAFT = register(new BoatItem("bamboo_raft", builder().stackSize(1)));
    public static final Item BAMBOO_CHEST_RAFT = register(new BoatItem("bamboo_chest_raft", builder().stackSize(1)));
    public static final Item STRUCTURE_BLOCK = register(new BlockItem(builder(), Blocks.STRUCTURE_BLOCK));
    public static final Item JIGSAW = register(new BlockItem(builder(), Blocks.JIGSAW));
    public static final Item TURTLE_HELMET = register(new ArmorItem("turtle_helmet", ArmorMaterial.TURTLE, builder().stackSize(1).maxDamage(275)));
    public static final Item TURTLE_SCUTE = register(new Item("turtle_scute", builder()));
    public static final Item ARMADILLO_SCUTE = register(new Item("armadillo_scute", builder()));
    public static final Item WOLF_ARMOR = register(new WolfArmorItem("wolf_armor", ArmorMaterial.ARMADILLO, builder().stackSize(1).maxDamage(64)));
    public static final Item FLINT_AND_STEEL = register(new Item("flint_and_steel", builder().stackSize(1).maxDamage(64)));
    public static final Item BOWL = register(new Item("bowl", builder()));
    public static final Item APPLE = register(new Item("apple", builder()));
    public static final Item BOW = register(new Item("bow", builder().stackSize(1).maxDamage(384)));
    public static final Item ARROW = register(new ArrowItem("arrow", builder()));
    public static final Item COAL = register(new Item("coal", builder()));
    public static final Item CHARCOAL = register(new Item("charcoal", builder()));
    public static final Item DIAMOND = register(new Item("diamond", builder()));
    public static final Item EMERALD = register(new Item("emerald", builder()));
    public static final Item LAPIS_LAZULI = register(new Item("lapis_lazuli", builder()));
    public static final Item QUARTZ = register(new Item("quartz", builder()));
    public static final Item AMETHYST_SHARD = register(new Item("amethyst_shard", builder()));
    public static final Item RAW_IRON = register(new Item("raw_iron", builder()));
    public static final Item IRON_INGOT = register(new Item("iron_ingot", builder()));
    public static final Item RAW_COPPER = register(new Item("raw_copper", builder()));
    public static final Item COPPER_INGOT = register(new Item("copper_ingot", builder()));
    public static final Item RAW_GOLD = register(new Item("raw_gold", builder()));
    public static final Item GOLD_INGOT = register(new Item("gold_ingot", builder()));
    public static final Item NETHERITE_INGOT = register(new Item("netherite_ingot", builder()));
    public static final Item NETHERITE_SCRAP = register(new Item("netherite_scrap", builder()));
    public static final Item WOODEN_SWORD = register(new TieredItem("wooden_sword", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59).attackDamage(4.0)));
    public static final Item WOODEN_SHOVEL = register(new TieredItem("wooden_shovel", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59).attackDamage(2.5)));
    public static final Item WOODEN_PICKAXE = register(new TieredItem("wooden_pickaxe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59).attackDamage(2.0)));
    public static final Item WOODEN_AXE = register(new TieredItem("wooden_axe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59).attackDamage(7.0)));
    public static final Item WOODEN_HOE = register(new TieredItem("wooden_hoe", ToolTier.WOODEN, builder().stackSize(1).maxDamage(59).attackDamage(1.0)));
    public static final Item STONE_SWORD = register(new TieredItem("stone_sword", ToolTier.STONE, builder().stackSize(1).maxDamage(131).attackDamage(5.0)));
    public static final Item STONE_SHOVEL = register(new TieredItem("stone_shovel", ToolTier.STONE, builder().stackSize(1).maxDamage(131).attackDamage(3.5)));
    public static final Item STONE_PICKAXE = register(new TieredItem("stone_pickaxe", ToolTier.STONE, builder().stackSize(1).maxDamage(131).attackDamage(3.0)));
    public static final Item STONE_AXE = register(new TieredItem("stone_axe", ToolTier.STONE, builder().stackSize(1).maxDamage(131).attackDamage(9.0)));
    public static final Item STONE_HOE = register(new TieredItem("stone_hoe", ToolTier.STONE, builder().stackSize(1).maxDamage(131).attackDamage(1.0)));
    public static final Item GOLDEN_SWORD = register(new TieredItem("golden_sword", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32).attackDamage(4.0)));
    public static final Item GOLDEN_SHOVEL = register(new TieredItem("golden_shovel", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32).attackDamage(2.5)));
    public static final Item GOLDEN_PICKAXE = register(new TieredItem("golden_pickaxe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32).attackDamage(2.0)));
    public static final Item GOLDEN_AXE = register(new TieredItem("golden_axe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32).attackDamage(7.0)));
    public static final Item GOLDEN_HOE = register(new TieredItem("golden_hoe", ToolTier.GOLDEN, builder().stackSize(1).maxDamage(32).attackDamage(1.0)));
    public static final Item IRON_SWORD = register(new TieredItem("iron_sword", ToolTier.IRON, builder().stackSize(1).maxDamage(250).attackDamage(6.0)));
    public static final Item IRON_SHOVEL = register(new TieredItem("iron_shovel", ToolTier.IRON, builder().stackSize(1).maxDamage(250).attackDamage(4.5)));
    public static final Item IRON_PICKAXE = register(new TieredItem("iron_pickaxe", ToolTier.IRON, builder().stackSize(1).maxDamage(250).attackDamage(4.0)));
    public static final Item IRON_AXE = register(new TieredItem("iron_axe", ToolTier.IRON, builder().stackSize(1).maxDamage(250).attackDamage(9.0)));
    public static final Item IRON_HOE = register(new TieredItem("iron_hoe", ToolTier.IRON, builder().stackSize(1).maxDamage(250).attackDamage(1.0)));
    public static final Item DIAMOND_SWORD = register(new TieredItem("diamond_sword", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561).attackDamage(7.0)));
    public static final Item DIAMOND_SHOVEL = register(new TieredItem("diamond_shovel", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561).attackDamage(5.5)));
    public static final Item DIAMOND_PICKAXE = register(new TieredItem("diamond_pickaxe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561).attackDamage(5.0)));
    public static final Item DIAMOND_AXE = register(new TieredItem("diamond_axe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561).attackDamage(9.0)));
    public static final Item DIAMOND_HOE = register(new TieredItem("diamond_hoe", ToolTier.DIAMOND, builder().stackSize(1).maxDamage(1561).attackDamage(1.0)));
    public static final Item NETHERITE_SWORD = register(new TieredItem("netherite_sword", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031).attackDamage(8.0)));
    public static final Item NETHERITE_SHOVEL = register(new TieredItem("netherite_shovel", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031).attackDamage(6.5)));
    public static final Item NETHERITE_PICKAXE = register(new TieredItem("netherite_pickaxe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031).attackDamage(6.0)));
    public static final Item NETHERITE_AXE = register(new TieredItem("netherite_axe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031).attackDamage(10.0)));
    public static final Item NETHERITE_HOE = register(new TieredItem("netherite_hoe", ToolTier.NETHERITE, builder().stackSize(1).maxDamage(2031).attackDamage(1.0)));
    public static final Item STICK = register(new Item("stick", builder()));
    public static final Item MUSHROOM_STEW = register(new Item("mushroom_stew", builder().stackSize(1)));
    public static final Item STRING = register(new BlockItem("string", builder(), Blocks.TRIPWIRE));
    public static final Item FEATHER = register(new Item("feather", builder()));
    public static final Item GUNPOWDER = register(new Item("gunpowder", builder()));
    public static final Item WHEAT_SEEDS = register(new BlockItem("wheat_seeds", builder(), Blocks.WHEAT));
    public static final Item WHEAT = register(new Item("wheat", builder()));
    public static final Item BREAD = register(new Item("bread", builder()));
    public static final Item LEATHER_HELMET = register(new DyeableArmorItem("leather_helmet", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(55)));
    public static final Item LEATHER_CHESTPLATE = register(new DyeableArmorItem("leather_chestplate", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(80)));
    public static final Item LEATHER_LEGGINGS = register(new DyeableArmorItem("leather_leggings", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(75)));
    public static final Item LEATHER_BOOTS = register(new DyeableArmorItem("leather_boots", ArmorMaterial.LEATHER, builder().stackSize(1).maxDamage(65)));
    public static final Item CHAINMAIL_HELMET = register(new ArmorItem("chainmail_helmet", ArmorMaterial.CHAINMAIL, builder().stackSize(1).maxDamage(165)));
    public static final Item CHAINMAIL_CHESTPLATE = register(new ArmorItem("chainmail_chestplate", ArmorMaterial.CHAINMAIL, builder().stackSize(1).maxDamage(240)));
    public static final Item CHAINMAIL_LEGGINGS = register(new ArmorItem("chainmail_leggings", ArmorMaterial.CHAINMAIL, builder().stackSize(1).maxDamage(225)));
    public static final Item CHAINMAIL_BOOTS = register(new ArmorItem("chainmail_boots", ArmorMaterial.CHAINMAIL, builder().stackSize(1).maxDamage(195)));
    public static final Item IRON_HELMET = register(new ArmorItem("iron_helmet", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(165)));
    public static final Item IRON_CHESTPLATE = register(new ArmorItem("iron_chestplate", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(240)));
    public static final Item IRON_LEGGINGS = register(new ArmorItem("iron_leggings", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(225)));
    public static final Item IRON_BOOTS = register(new ArmorItem("iron_boots", ArmorMaterial.IRON, builder().stackSize(1).maxDamage(195)));
    public static final Item DIAMOND_HELMET = register(new ArmorItem("diamond_helmet", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(363)));
    public static final Item DIAMOND_CHESTPLATE = register(new ArmorItem("diamond_chestplate", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(528)));
    public static final Item DIAMOND_LEGGINGS = register(new ArmorItem("diamond_leggings", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(495)));
    public static final Item DIAMOND_BOOTS = register(new ArmorItem("diamond_boots", ArmorMaterial.DIAMOND, builder().stackSize(1).maxDamage(429)));
    public static final Item GOLDEN_HELMET = register(new ArmorItem("golden_helmet", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(77)));
    public static final Item GOLDEN_CHESTPLATE = register(new ArmorItem("golden_chestplate", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(112)));
    public static final Item GOLDEN_LEGGINGS = register(new ArmorItem("golden_leggings", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(105)));
    public static final Item GOLDEN_BOOTS = register(new ArmorItem("golden_boots", ArmorMaterial.GOLD, builder().stackSize(1).maxDamage(91)));
    public static final Item NETHERITE_HELMET = register(new ArmorItem("netherite_helmet", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(407)));
    public static final Item NETHERITE_CHESTPLATE = register(new ArmorItem("netherite_chestplate", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(592)));
    public static final Item NETHERITE_LEGGINGS = register(new ArmorItem("netherite_leggings", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(555)));
    public static final Item NETHERITE_BOOTS = register(new ArmorItem("netherite_boots", ArmorMaterial.NETHERITE, builder().stackSize(1).maxDamage(481)));
    public static final Item FLINT = register(new Item("flint", builder()));
    public static final Item PORKCHOP = register(new Item("porkchop", builder()));
    public static final Item COOKED_PORKCHOP = register(new Item("cooked_porkchop", builder()));
    public static final Item PAINTING = register(new Item("painting", builder()));
    public static final Item GOLDEN_APPLE = register(new Item("golden_apple", builder()));
    public static final Item ENCHANTED_GOLDEN_APPLE = register(new Item("enchanted_golden_apple", builder()));
    public static final Item OAK_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.OAK_SIGN, Blocks.OAK_WALL_SIGN));
    public static final Item SPRUCE_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.SPRUCE_SIGN, Blocks.SPRUCE_WALL_SIGN));
    public static final Item BIRCH_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.BIRCH_SIGN, Blocks.BIRCH_WALL_SIGN));
    public static final Item JUNGLE_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.JUNGLE_SIGN, Blocks.JUNGLE_WALL_SIGN));
    public static final Item ACACIA_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.ACACIA_SIGN, Blocks.ACACIA_WALL_SIGN));
    public static final Item CHERRY_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.CHERRY_SIGN, Blocks.CHERRY_WALL_SIGN));
    public static final Item DARK_OAK_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.DARK_OAK_SIGN, Blocks.DARK_OAK_WALL_SIGN));
    public static final Item MANGROVE_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.MANGROVE_SIGN, Blocks.MANGROVE_WALL_SIGN));
    public static final Item BAMBOO_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.BAMBOO_SIGN, Blocks.BAMBOO_WALL_SIGN));
    public static final Item CRIMSON_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.CRIMSON_SIGN, Blocks.CRIMSON_WALL_SIGN));
    public static final Item WARPED_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.WARPED_SIGN, Blocks.WARPED_WALL_SIGN));
    public static final Item OAK_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.OAK_HANGING_SIGN, Blocks.OAK_WALL_HANGING_SIGN));
    public static final Item SPRUCE_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.SPRUCE_HANGING_SIGN, Blocks.SPRUCE_WALL_HANGING_SIGN));
    public static final Item BIRCH_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.BIRCH_HANGING_SIGN, Blocks.BIRCH_WALL_HANGING_SIGN));
    public static final Item JUNGLE_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.JUNGLE_HANGING_SIGN, Blocks.JUNGLE_WALL_HANGING_SIGN));
    public static final Item ACACIA_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.ACACIA_HANGING_SIGN, Blocks.ACACIA_WALL_HANGING_SIGN));
    public static final Item CHERRY_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.CHERRY_HANGING_SIGN, Blocks.CHERRY_WALL_HANGING_SIGN));
    public static final Item DARK_OAK_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.DARK_OAK_HANGING_SIGN, Blocks.DARK_OAK_WALL_HANGING_SIGN));
    public static final Item MANGROVE_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.MANGROVE_HANGING_SIGN, Blocks.MANGROVE_WALL_HANGING_SIGN));
    public static final Item BAMBOO_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.BAMBOO_HANGING_SIGN, Blocks.BAMBOO_WALL_HANGING_SIGN));
    public static final Item CRIMSON_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.CRIMSON_HANGING_SIGN, Blocks.CRIMSON_WALL_HANGING_SIGN));
    public static final Item WARPED_HANGING_SIGN = register(new BlockItem(builder().stackSize(16), Blocks.WARPED_HANGING_SIGN, Blocks.WARPED_WALL_HANGING_SIGN));
    public static final Item BUCKET = register(new Item("bucket", builder().stackSize(16)));
    public static final Item WATER_BUCKET = register(new Item("water_bucket", builder().stackSize(1)));
    public static final Item LAVA_BUCKET = register(new Item("lava_bucket", builder().stackSize(1)));
    public static final Item POWDER_SNOW_BUCKET = register(new BlockItem("powder_snow_bucket", builder().stackSize(1), Blocks.POWDER_SNOW));
    public static final Item SNOWBALL = register(new Item("snowball", builder().stackSize(16)));
    public static final Item LEATHER = register(new Item("leather", builder()));
    public static final Item MILK_BUCKET = register(new Item("milk_bucket", builder().stackSize(1)));
    public static final Item PUFFERFISH_BUCKET = register(new Item("pufferfish_bucket", builder().stackSize(1)));
    public static final Item SALMON_BUCKET = register(new Item("salmon_bucket", builder().stackSize(1)));
    public static final Item COD_BUCKET = register(new Item("cod_bucket", builder().stackSize(1)));
    public static final Item TROPICAL_FISH_BUCKET = register(new TropicalFishBucketItem("tropical_fish_bucket", builder().stackSize(1)));
    public static final Item AXOLOTL_BUCKET = register(new AxolotlBucketItem("axolotl_bucket", builder().stackSize(1)));
    public static final Item TADPOLE_BUCKET = register(new Item("tadpole_bucket", builder().stackSize(1)));
    public static final Item BRICK = register(new Item("brick", builder()));
    public static final Item CLAY_BALL = register(new Item("clay_ball", builder()));
    public static final Item DRIED_KELP_BLOCK = register(new BlockItem(builder(), Blocks.DRIED_KELP_BLOCK));
    public static final Item PAPER = register(new Item("paper", builder()));
    public static final Item BOOK = register(new Item("book", builder()));
    public static final Item SLIME_BALL = register(new Item("slime_ball", builder()));
    public static final Item EGG = register(new Item("egg", builder().stackSize(16)));
    public static final Item COMPASS = register(new CompassItem("compass", builder()));
    public static final Item RECOVERY_COMPASS = register(new Item("recovery_compass", builder()));
    public static final Item BUNDLE = register(new Item("bundle", builder().stackSize(1)));
    public static final Item FISHING_ROD = register(new FishingRodItem("fishing_rod", builder().stackSize(1).maxDamage(64)));
    public static final Item CLOCK = register(new Item("clock", builder()));
    public static final Item SPYGLASS = register(new Item("spyglass", builder().stackSize(1)));
    public static final Item GLOWSTONE_DUST = register(new Item("glowstone_dust", builder()));
    public static final Item COD = register(new Item("cod", builder()));
    public static final Item SALMON = register(new Item("salmon", builder()));
    public static final Item TROPICAL_FISH = register(new Item("tropical_fish", builder()));
    public static final Item PUFFERFISH = register(new Item("pufferfish", builder()));
    public static final Item COOKED_COD = register(new Item("cooked_cod", builder()));
    public static final Item COOKED_SALMON = register(new Item("cooked_salmon", builder()));
    public static final Item INK_SAC = register(new Item("ink_sac", builder()));
    public static final Item GLOW_INK_SAC = register(new Item("glow_ink_sac", builder()));
    public static final Item COCOA_BEANS = register(new BlockItem("cocoa_beans", builder(), Blocks.COCOA));
    public static final Item WHITE_DYE = register(new DyeItem("white_dye", 0, builder()));
    public static final Item ORANGE_DYE = register(new DyeItem("orange_dye", 1, builder()));
    public static final Item MAGENTA_DYE = register(new DyeItem("magenta_dye", 2, builder()));
    public static final Item LIGHT_BLUE_DYE = register(new DyeItem("light_blue_dye", 3, builder()));
    public static final Item YELLOW_DYE = register(new DyeItem("yellow_dye", 4, builder()));
    public static final Item LIME_DYE = register(new DyeItem("lime_dye", 5, builder()));
    public static final Item PINK_DYE = register(new DyeItem("pink_dye", 6, builder()));
    public static final Item GRAY_DYE = register(new DyeItem("gray_dye", 7, builder()));
    public static final Item LIGHT_GRAY_DYE = register(new DyeItem("light_gray_dye", 8, builder()));
    public static final Item CYAN_DYE = register(new DyeItem("cyan_dye", 9, builder()));
    public static final Item PURPLE_DYE = register(new DyeItem("purple_dye", 10, builder()));
    public static final Item BLUE_DYE = register(new DyeItem("blue_dye", 11, builder()));
    public static final Item BROWN_DYE = register(new DyeItem("brown_dye", 12, builder()));
    public static final Item GREEN_DYE = register(new DyeItem("green_dye", 13, builder()));
    public static final Item RED_DYE = register(new DyeItem("red_dye", 14, builder()));
    public static final Item BLACK_DYE = register(new DyeItem("black_dye", 15, builder()));
    public static final Item BONE_MEAL = register(new Item("bone_meal", builder()));
    public static final Item BONE = register(new Item("bone", builder()));
    public static final Item SUGAR = register(new Item("sugar", builder()));
    public static final Item CAKE = register(new BlockItem(builder().stackSize(1), Blocks.CAKE));
    public static final Item WHITE_BED = register(new BlockItem(builder().stackSize(1), Blocks.WHITE_BED));
    public static final Item ORANGE_BED = register(new BlockItem(builder().stackSize(1), Blocks.ORANGE_BED));
    public static final Item MAGENTA_BED = register(new BlockItem(builder().stackSize(1), Blocks.MAGENTA_BED));
    public static final Item LIGHT_BLUE_BED = register(new BlockItem(builder().stackSize(1), Blocks.LIGHT_BLUE_BED));
    public static final Item YELLOW_BED = register(new BlockItem(builder().stackSize(1), Blocks.YELLOW_BED));
    public static final Item LIME_BED = register(new BlockItem(builder().stackSize(1), Blocks.LIME_BED));
    public static final Item PINK_BED = register(new BlockItem(builder().stackSize(1), Blocks.PINK_BED));
    public static final Item GRAY_BED = register(new BlockItem(builder().stackSize(1), Blocks.GRAY_BED));
    public static final Item LIGHT_GRAY_BED = register(new BlockItem(builder().stackSize(1), Blocks.LIGHT_GRAY_BED));
    public static final Item CYAN_BED = register(new BlockItem(builder().stackSize(1), Blocks.CYAN_BED));
    public static final Item PURPLE_BED = register(new BlockItem(builder().stackSize(1), Blocks.PURPLE_BED));
    public static final Item BLUE_BED = register(new BlockItem(builder().stackSize(1), Blocks.BLUE_BED));
    public static final Item BROWN_BED = register(new BlockItem(builder().stackSize(1), Blocks.BROWN_BED));
    public static final Item GREEN_BED = register(new BlockItem(builder().stackSize(1), Blocks.GREEN_BED));
    public static final Item RED_BED = register(new BlockItem(builder().stackSize(1), Blocks.RED_BED));
    public static final Item BLACK_BED = register(new BlockItem(builder().stackSize(1), Blocks.BLACK_BED));
    public static final Item COOKIE = register(new Item("cookie", builder()));
    public static final Item CRAFTER = register(new BlockItem(builder(), Blocks.CRAFTER));
    public static final Item FILLED_MAP = register(new FilledMapItem("filled_map", builder()));
    public static final Item SHEARS = register(new Item("shears", builder().stackSize(1).maxDamage(238)));
    public static final Item MELON_SLICE = register(new Item("melon_slice", builder()));
    public static final Item DRIED_KELP = register(new Item("dried_kelp", builder()));
    public static final Item PUMPKIN_SEEDS = register(new BlockItem("pumpkin_seeds", builder(), Blocks.PUMPKIN_STEM));
    public static final Item MELON_SEEDS = register(new BlockItem("melon_seeds", builder(), Blocks.MELON_STEM));
    public static final Item BEEF = register(new Item("beef", builder()));
    public static final Item COOKED_BEEF = register(new Item("cooked_beef", builder()));
    public static final Item CHICKEN = register(new Item("chicken", builder()));
    public static final Item COOKED_CHICKEN = register(new Item("cooked_chicken", builder()));
    public static final Item ROTTEN_FLESH = register(new Item("rotten_flesh", builder()));
    public static final Item ENDER_PEARL = register(new Item("ender_pearl", builder().stackSize(16)));
    public static final Item BLAZE_ROD = register(new Item("blaze_rod", builder()));
    public static final Item GHAST_TEAR = register(new Item("ghast_tear", builder()));
    public static final Item GOLD_NUGGET = register(new Item("gold_nugget", builder()));
    public static final Item NETHER_WART = register(new BlockItem(builder(), Blocks.NETHER_WART));
    public static final Item POTION = register(new PotionItem("potion", builder().stackSize(1)));
    public static final Item GLASS_BOTTLE = register(new Item("glass_bottle", builder()));
    public static final Item SPIDER_EYE = register(new Item("spider_eye", builder()));
    public static final Item FERMENTED_SPIDER_EYE = register(new Item("fermented_spider_eye", builder()));
    public static final Item BLAZE_POWDER = register(new Item("blaze_powder", builder()));
    public static final Item MAGMA_CREAM = register(new Item("magma_cream", builder()));
    public static final Item BREWING_STAND = register(new BlockItem(builder(), Blocks.BREWING_STAND));
    public static final Item CAULDRON = register(new BlockItem(builder(), Blocks.CAULDRON, Blocks.WATER_CAULDRON, Blocks.LAVA_CAULDRON, Blocks.POWDER_SNOW_CAULDRON));
    public static final Item ENDER_EYE = register(new Item("ender_eye", builder()));
    public static final Item GLISTERING_MELON_SLICE = register(new Item("glistering_melon_slice", builder()));
    public static final Item ARMADILLO_SPAWN_EGG = register(new SpawnEggItem("armadillo_spawn_egg", builder()));
    public static final Item ALLAY_SPAWN_EGG = register(new SpawnEggItem("allay_spawn_egg", builder()));
    public static final Item AXOLOTL_SPAWN_EGG = register(new SpawnEggItem("axolotl_spawn_egg", builder()));
    public static final Item BAT_SPAWN_EGG = register(new SpawnEggItem("bat_spawn_egg", builder()));
    public static final Item BEE_SPAWN_EGG = register(new SpawnEggItem("bee_spawn_egg", builder()));
    public static final Item BLAZE_SPAWN_EGG = register(new SpawnEggItem("blaze_spawn_egg", builder()));
    public static final Item BOGGED_SPAWN_EGG = register(new SpawnEggItem("bogged_spawn_egg", builder()));
    public static final Item BREEZE_SPAWN_EGG = register(new SpawnEggItem("breeze_spawn_egg", builder()));
    public static final Item CAT_SPAWN_EGG = register(new SpawnEggItem("cat_spawn_egg", builder()));
    public static final Item CAMEL_SPAWN_EGG = register(new SpawnEggItem("camel_spawn_egg", builder()));
    public static final Item CAVE_SPIDER_SPAWN_EGG = register(new SpawnEggItem("cave_spider_spawn_egg", builder()));
    public static final Item CHICKEN_SPAWN_EGG = register(new SpawnEggItem("chicken_spawn_egg", builder()));
    public static final Item COD_SPAWN_EGG = register(new SpawnEggItem("cod_spawn_egg", builder()));
    public static final Item COW_SPAWN_EGG = register(new SpawnEggItem("cow_spawn_egg", builder()));
    public static final Item CREEPER_SPAWN_EGG = register(new SpawnEggItem("creeper_spawn_egg", builder()));
    public static final Item DOLPHIN_SPAWN_EGG = register(new SpawnEggItem("dolphin_spawn_egg", builder()));
    public static final Item DONKEY_SPAWN_EGG = register(new SpawnEggItem("donkey_spawn_egg", builder()));
    public static final Item DROWNED_SPAWN_EGG = register(new SpawnEggItem("drowned_spawn_egg", builder()));
    public static final Item ELDER_GUARDIAN_SPAWN_EGG = register(new SpawnEggItem("elder_guardian_spawn_egg", builder()));
    public static final Item ENDER_DRAGON_SPAWN_EGG = register(new SpawnEggItem("ender_dragon_spawn_egg", builder()));
    public static final Item ENDERMAN_SPAWN_EGG = register(new SpawnEggItem("enderman_spawn_egg", builder()));
    public static final Item ENDERMITE_SPAWN_EGG = register(new SpawnEggItem("endermite_spawn_egg", builder()));
    public static final Item EVOKER_SPAWN_EGG = register(new SpawnEggItem("evoker_spawn_egg", builder()));
    public static final Item FOX_SPAWN_EGG = register(new SpawnEggItem("fox_spawn_egg", builder()));
    public static final Item FROG_SPAWN_EGG = register(new SpawnEggItem("frog_spawn_egg", builder()));
    public static final Item GHAST_SPAWN_EGG = register(new SpawnEggItem("ghast_spawn_egg", builder()));
    public static final Item GLOW_SQUID_SPAWN_EGG = register(new SpawnEggItem("glow_squid_spawn_egg", builder()));
    public static final Item GOAT_SPAWN_EGG = register(new SpawnEggItem("goat_spawn_egg", builder()));
    public static final Item GUARDIAN_SPAWN_EGG = register(new SpawnEggItem("guardian_spawn_egg", builder()));
    public static final Item HOGLIN_SPAWN_EGG = register(new SpawnEggItem("hoglin_spawn_egg", builder()));
    public static final Item HORSE_SPAWN_EGG = register(new SpawnEggItem("horse_spawn_egg", builder()));
    public static final Item HUSK_SPAWN_EGG = register(new SpawnEggItem("husk_spawn_egg", builder()));
    public static final Item IRON_GOLEM_SPAWN_EGG = register(new SpawnEggItem("iron_golem_spawn_egg", builder()));
    public static final Item LLAMA_SPAWN_EGG = register(new SpawnEggItem("llama_spawn_egg", builder()));
    public static final Item MAGMA_CUBE_SPAWN_EGG = register(new SpawnEggItem("magma_cube_spawn_egg", builder()));
    public static final Item MOOSHROOM_SPAWN_EGG = register(new SpawnEggItem("mooshroom_spawn_egg", builder()));
    public static final Item MULE_SPAWN_EGG = register(new SpawnEggItem("mule_spawn_egg", builder()));
    public static final Item OCELOT_SPAWN_EGG = register(new SpawnEggItem("ocelot_spawn_egg", builder()));
    public static final Item PANDA_SPAWN_EGG = register(new SpawnEggItem("panda_spawn_egg", builder()));
    public static final Item PARROT_SPAWN_EGG = register(new SpawnEggItem("parrot_spawn_egg", builder()));
    public static final Item PHANTOM_SPAWN_EGG = register(new SpawnEggItem("phantom_spawn_egg", builder()));
    public static final Item PIG_SPAWN_EGG = register(new SpawnEggItem("pig_spawn_egg", builder()));
    public static final Item PIGLIN_SPAWN_EGG = register(new SpawnEggItem("piglin_spawn_egg", builder()));
    public static final Item PIGLIN_BRUTE_SPAWN_EGG = register(new SpawnEggItem("piglin_brute_spawn_egg", builder()));
    public static final Item PILLAGER_SPAWN_EGG = register(new SpawnEggItem("pillager_spawn_egg", builder()));
    public static final Item POLAR_BEAR_SPAWN_EGG = register(new SpawnEggItem("polar_bear_spawn_egg", builder()));
    public static final Item PUFFERFISH_SPAWN_EGG = register(new SpawnEggItem("pufferfish_spawn_egg", builder()));
    public static final Item RABBIT_SPAWN_EGG = register(new SpawnEggItem("rabbit_spawn_egg", builder()));
    public static final Item RAVAGER_SPAWN_EGG = register(new SpawnEggItem("ravager_spawn_egg", builder()));
    public static final Item SALMON_SPAWN_EGG = register(new SpawnEggItem("salmon_spawn_egg", builder()));
    public static final Item SHEEP_SPAWN_EGG = register(new SpawnEggItem("sheep_spawn_egg", builder()));
    public static final Item SHULKER_SPAWN_EGG = register(new SpawnEggItem("shulker_spawn_egg", builder()));
    public static final Item SILVERFISH_SPAWN_EGG = register(new SpawnEggItem("silverfish_spawn_egg", builder()));
    public static final Item SKELETON_SPAWN_EGG = register(new SpawnEggItem("skeleton_spawn_egg", builder()));
    public static final Item SKELETON_HORSE_SPAWN_EGG = register(new SpawnEggItem("skeleton_horse_spawn_egg", builder()));
    public static final Item SLIME_SPAWN_EGG = register(new SpawnEggItem("slime_spawn_egg", builder()));
    public static final Item SNIFFER_SPAWN_EGG = register(new SpawnEggItem("sniffer_spawn_egg", builder()));
    public static final Item SNOW_GOLEM_SPAWN_EGG = register(new SpawnEggItem("snow_golem_spawn_egg", builder()));
    public static final Item SPIDER_SPAWN_EGG = register(new SpawnEggItem("spider_spawn_egg", builder()));
    public static final Item SQUID_SPAWN_EGG = register(new SpawnEggItem("squid_spawn_egg", builder()));
    public static final Item STRAY_SPAWN_EGG = register(new SpawnEggItem("stray_spawn_egg", builder()));
    public static final Item STRIDER_SPAWN_EGG = register(new SpawnEggItem("strider_spawn_egg", builder()));
    public static final Item TADPOLE_SPAWN_EGG = register(new SpawnEggItem("tadpole_spawn_egg", builder()));
    public static final Item TRADER_LLAMA_SPAWN_EGG = register(new SpawnEggItem("trader_llama_spawn_egg", builder()));
    public static final Item TROPICAL_FISH_SPAWN_EGG = register(new SpawnEggItem("tropical_fish_spawn_egg", builder()));
    public static final Item TURTLE_SPAWN_EGG = register(new SpawnEggItem("turtle_spawn_egg", builder()));
    public static final Item VEX_SPAWN_EGG = register(new SpawnEggItem("vex_spawn_egg", builder()));
    public static final Item VILLAGER_SPAWN_EGG = register(new SpawnEggItem("villager_spawn_egg", builder()));
    public static final Item VINDICATOR_SPAWN_EGG = register(new SpawnEggItem("vindicator_spawn_egg", builder()));
    public static final Item WANDERING_TRADER_SPAWN_EGG = register(new SpawnEggItem("wandering_trader_spawn_egg", builder()));
    public static final Item WARDEN_SPAWN_EGG = register(new SpawnEggItem("warden_spawn_egg", builder()));
    public static final Item WITCH_SPAWN_EGG = register(new SpawnEggItem("witch_spawn_egg", builder()));
    public static final Item WITHER_SPAWN_EGG = register(new SpawnEggItem("wither_spawn_egg", builder()));
    public static final Item WITHER_SKELETON_SPAWN_EGG = register(new SpawnEggItem("wither_skeleton_spawn_egg", builder()));
    public static final Item WOLF_SPAWN_EGG = register(new SpawnEggItem("wolf_spawn_egg", builder()));
    public static final Item ZOGLIN_SPAWN_EGG = register(new SpawnEggItem("zoglin_spawn_egg", builder()));
    public static final Item ZOMBIE_SPAWN_EGG = register(new SpawnEggItem("zombie_spawn_egg", builder()));
    public static final Item ZOMBIE_HORSE_SPAWN_EGG = register(new SpawnEggItem("zombie_horse_spawn_egg", builder()));
    public static final Item ZOMBIE_VILLAGER_SPAWN_EGG = register(new SpawnEggItem("zombie_villager_spawn_egg", builder()));
    public static final Item ZOMBIFIED_PIGLIN_SPAWN_EGG = register(new SpawnEggItem("zombified_piglin_spawn_egg", builder()));
    public static final Item EXPERIENCE_BOTTLE = register(new Item("experience_bottle", builder()));
    public static final Item FIRE_CHARGE = register(new Item("fire_charge", builder()));
    public static final Item WIND_CHARGE = register(new Item("wind_charge", builder()));
    public static final Item WRITABLE_BOOK = register(new WritableBookItem("writable_book", builder().stackSize(1)));
    public static final Item WRITTEN_BOOK = register(new WrittenBookItem("written_book", builder().stackSize(16)));
    public static final Item MACE = register(new MaceItem("mace", builder().stackSize(1).maxDamage(500)));
    public static final Item ITEM_FRAME = register(new Item("item_frame", builder()));
    public static final Item GLOW_ITEM_FRAME = register(new Item("glow_item_frame", builder()));
    public static final Item FLOWER_POT = register(new BlockItem(builder(), Blocks.FLOWER_POT));
    public static final Item CARROT = register(new BlockItem("carrot", builder(), Blocks.CARROTS));
    public static final Item POTATO = register(new BlockItem("potato", builder(), Blocks.POTATOES));
    public static final Item BAKED_POTATO = register(new Item("baked_potato", builder()));
    public static final Item POISONOUS_POTATO = register(new Item("poisonous_potato", builder()));
    public static final Item MAP = register(new MapItem("map", builder()));
    public static final Item GOLDEN_CARROT = register(new Item("golden_carrot", builder()));
    public static final Item SKELETON_SKULL = register(new BlockItem(builder(), Blocks.SKELETON_SKULL, Blocks.SKELETON_WALL_SKULL));
    public static final Item WITHER_SKELETON_SKULL = register(new BlockItem(builder(), Blocks.WITHER_SKELETON_SKULL, Blocks.WITHER_SKELETON_WALL_SKULL));
    public static final Item PLAYER_HEAD = register(new PlayerHeadItem(builder(), Blocks.PLAYER_HEAD, Blocks.PLAYER_WALL_HEAD));
    public static final Item ZOMBIE_HEAD = register(new BlockItem(builder(), Blocks.ZOMBIE_HEAD, Blocks.ZOMBIE_WALL_HEAD));
    public static final Item CREEPER_HEAD = register(new BlockItem(builder(), Blocks.CREEPER_HEAD, Blocks.CREEPER_WALL_HEAD));
    public static final Item DRAGON_HEAD = register(new BlockItem(builder(), Blocks.DRAGON_HEAD, Blocks.DRAGON_WALL_HEAD));
    public static final Item PIGLIN_HEAD = register(new BlockItem(builder(), Blocks.PIGLIN_HEAD, Blocks.PIGLIN_WALL_HEAD));
    public static final Item NETHER_STAR = register(new Item("nether_star", builder()));
    public static final Item PUMPKIN_PIE = register(new Item("pumpkin_pie", builder()));
    public static final Item FIREWORK_ROCKET = register(new FireworkRocketItem("firework_rocket", builder()));
    public static final Item FIREWORK_STAR = register(new FireworkStarItem("firework_star", builder()));
    public static final Item ENCHANTED_BOOK = register(new EnchantedBookItem("enchanted_book", builder().stackSize(1)));
    public static final Item NETHER_BRICK = register(new Item("nether_brick", builder()));
    public static final Item PRISMARINE_SHARD = register(new Item("prismarine_shard", builder()));
    public static final Item PRISMARINE_CRYSTALS = register(new Item("prismarine_crystals", builder()));
    public static final Item RABBIT = register(new Item("rabbit", builder()));
    public static final Item COOKED_RABBIT = register(new Item("cooked_rabbit", builder()));
    public static final Item RABBIT_STEW = register(new Item("rabbit_stew", builder().stackSize(1)));
    public static final Item RABBIT_FOOT = register(new Item("rabbit_foot", builder()));
    public static final Item RABBIT_HIDE = register(new Item("rabbit_hide", builder()));
    public static final Item ARMOR_STAND = register(new Item("armor_stand", builder().stackSize(16)));
    public static final Item IRON_HORSE_ARMOR = register(new ArmorItem("iron_horse_armor", ArmorMaterial.IRON, builder().stackSize(1)));
    public static final Item GOLDEN_HORSE_ARMOR = register(new ArmorItem("golden_horse_armor", ArmorMaterial.GOLD, builder().stackSize(1)));
    public static final Item DIAMOND_HORSE_ARMOR = register(new ArmorItem("diamond_horse_armor", ArmorMaterial.DIAMOND, builder().stackSize(1)));
    public static final Item LEATHER_HORSE_ARMOR = register(new DyeableArmorItem("leather_horse_armor", ArmorMaterial.LEATHER, builder().stackSize(1)));
    public static final Item LEAD = register(new Item("lead", builder()));
    public static final Item NAME_TAG = register(new Item("name_tag", builder()));
    public static final Item COMMAND_BLOCK_MINECART = register(new Item("command_block_minecart", builder().stackSize(1)));
    public static final Item MUTTON = register(new Item("mutton", builder()));
    public static final Item COOKED_MUTTON = register(new Item("cooked_mutton", builder()));
    public static final Item WHITE_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.WHITE_BANNER, Blocks.WHITE_WALL_BANNER));
    public static final Item ORANGE_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.ORANGE_BANNER, Blocks.ORANGE_WALL_BANNER));
    public static final Item MAGENTA_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.MAGENTA_BANNER, Blocks.MAGENTA_WALL_BANNER));
    public static final Item LIGHT_BLUE_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.LIGHT_BLUE_BANNER, Blocks.LIGHT_BLUE_WALL_BANNER));
    public static final Item YELLOW_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.YELLOW_BANNER, Blocks.YELLOW_WALL_BANNER));
    public static final Item LIME_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.LIME_BANNER, Blocks.LIME_WALL_BANNER));
    public static final Item PINK_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.PINK_BANNER, Blocks.PINK_WALL_BANNER));
    public static final Item GRAY_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.GRAY_BANNER, Blocks.GRAY_WALL_BANNER));
    public static final Item LIGHT_GRAY_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.LIGHT_GRAY_BANNER, Blocks.LIGHT_GRAY_WALL_BANNER));
    public static final Item CYAN_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.CYAN_BANNER, Blocks.CYAN_WALL_BANNER));
    public static final Item PURPLE_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.PURPLE_BANNER, Blocks.PURPLE_WALL_BANNER));
    public static final Item BLUE_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.BLUE_BANNER, Blocks.BLUE_WALL_BANNER));
    public static final Item BROWN_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.BROWN_BANNER, Blocks.BROWN_WALL_BANNER));
    public static final Item GREEN_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.GREEN_BANNER, Blocks.GREEN_WALL_BANNER));
    public static final Item RED_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.RED_BANNER, Blocks.RED_WALL_BANNER));
    public static final Item BLACK_BANNER = register(new BannerItem(builder().stackSize(16), Blocks.BLACK_BANNER, Blocks.BLACK_WALL_BANNER));
    public static final Item END_CRYSTAL = register(new Item("end_crystal", builder()));
    public static final Item CHORUS_FRUIT = register(new Item("chorus_fruit", builder()));
    public static final Item POPPED_CHORUS_FRUIT = register(new Item("popped_chorus_fruit", builder()));
    public static final Item TORCHFLOWER_SEEDS = register(new BlockItem("torchflower_seeds", builder(), Blocks.TORCHFLOWER_CROP));
    public static final Item PITCHER_POD = register(new BlockItem("pitcher_pod", builder(), Blocks.PITCHER_CROP));
    public static final Item BEETROOT = register(new Item("beetroot", builder()));
    public static final Item BEETROOT_SEEDS = register(new BlockItem("beetroot_seeds", builder(), Blocks.BEETROOTS));
    public static final Item BEETROOT_SOUP = register(new Item("beetroot_soup", builder().stackSize(1)));
    public static final Item DRAGON_BREATH = register(new Item("dragon_breath", builder()));
    public static final Item SPLASH_POTION = register(new PotionItem("splash_potion", builder().stackSize(1)));
    public static final Item SPECTRAL_ARROW = register(new Item("spectral_arrow", builder()));
    public static final Item TIPPED_ARROW = register(new TippedArrowItem("tipped_arrow", builder()));
    public static final Item LINGERING_POTION = register(new PotionItem("lingering_potion", builder().stackSize(1)));
    public static final Item SHIELD = register(new ShieldItem("shield", builder().stackSize(1).maxDamage(336)));
    public static final Item TOTEM_OF_UNDYING = register(new Item("totem_of_undying", builder().stackSize(1)));
    public static final Item SHULKER_SHELL = register(new Item("shulker_shell", builder()));
    public static final Item IRON_NUGGET = register(new Item("iron_nugget", builder()));
    public static final Item KNOWLEDGE_BOOK = register(new Item("knowledge_book", builder().stackSize(1)));
    public static final Item DEBUG_STICK = register(new Item("debug_stick", builder().stackSize(1)));
    public static final Item MUSIC_DISC_13 = register(new Item("music_disc_13", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CAT = register(new Item("music_disc_cat", builder().stackSize(1)));
    public static final Item MUSIC_DISC_BLOCKS = register(new Item("music_disc_blocks", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CHIRP = register(new Item("music_disc_chirp", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CREATOR = register(new Item("music_disc_creator", builder().stackSize(1)));
    public static final Item MUSIC_DISC_CREATOR_MUSIC_BOX = register(new Item("music_disc_creator_music_box", builder().stackSize(1)));
    public static final Item MUSIC_DISC_FAR = register(new Item("music_disc_far", builder().stackSize(1)));
    public static final Item MUSIC_DISC_MALL = register(new Item("music_disc_mall", builder().stackSize(1)));
    public static final Item MUSIC_DISC_MELLOHI = register(new Item("music_disc_mellohi", builder().stackSize(1)));
    public static final Item MUSIC_DISC_STAL = register(new Item("music_disc_stal", builder().stackSize(1)));
    public static final Item MUSIC_DISC_STRAD = register(new Item("music_disc_strad", builder().stackSize(1)));
    public static final Item MUSIC_DISC_WARD = register(new Item("music_disc_ward", builder().stackSize(1)));
    public static final Item MUSIC_DISC_11 = register(new Item("music_disc_11", builder().stackSize(1)));
    public static final Item MUSIC_DISC_WAIT = register(new Item("music_disc_wait", builder().stackSize(1)));
    public static final Item MUSIC_DISC_OTHERSIDE = register(new Item("music_disc_otherside", builder().stackSize(1)));
    public static final Item MUSIC_DISC_RELIC = register(new Item("music_disc_relic", builder().stackSize(1)));
    public static final Item MUSIC_DISC_5 = register(new Item("music_disc_5", builder().stackSize(1)));
    public static final Item MUSIC_DISC_PIGSTEP = register(new Item("music_disc_pigstep", builder().stackSize(1)));
    public static final Item MUSIC_DISC_PRECIPICE = register(new Item("music_disc_precipice", builder().stackSize(1)));
    public static final Item DISC_FRAGMENT_5 = register(new Item("disc_fragment_5", builder()));
    public static final Item TRIDENT = register(new Item("trident", builder().stackSize(1).maxDamage(250).attackDamage(9.0)));
    public static final Item PHANTOM_MEMBRANE = register(new Item("phantom_membrane", builder()));
    public static final Item NAUTILUS_SHELL = register(new Item("nautilus_shell", builder()));
    public static final Item HEART_OF_THE_SEA = register(new Item("heart_of_the_sea", builder()));
    public static final Item CROSSBOW = register(new CrossbowItem("crossbow", builder().stackSize(1).maxDamage(465)));
    public static final Item SUSPICIOUS_STEW = register(new Item("suspicious_stew", builder().stackSize(1)));
    public static final Item LOOM = register(new BlockItem(builder(), Blocks.LOOM));
    public static final Item FLOWER_BANNER_PATTERN = register(new Item("flower_banner_pattern", builder().stackSize(1)));
    public static final Item CREEPER_BANNER_PATTERN = register(new Item("creeper_banner_pattern", builder().stackSize(1)));
    public static final Item SKULL_BANNER_PATTERN = register(new Item("skull_banner_pattern", builder().stackSize(1)));
    public static final Item MOJANG_BANNER_PATTERN = register(new Item("mojang_banner_pattern", builder().stackSize(1)));
    public static final Item GLOBE_BANNER_PATTERN = register(new Item("globe_banner_pattern", builder().stackSize(1)));
    public static final Item PIGLIN_BANNER_PATTERN = register(new Item("piglin_banner_pattern", builder().stackSize(1)));
    public static final Item FLOW_BANNER_PATTERN = register(new Item("flow_banner_pattern", builder().stackSize(1)));
    public static final Item GUSTER_BANNER_PATTERN = register(new Item("guster_banner_pattern", builder().stackSize(1)));
    public static final Item GOAT_HORN = register(new GoatHornItem("goat_horn", builder().stackSize(1)));
    public static final Item COMPOSTER = register(new BlockItem(builder(), Blocks.COMPOSTER));
    public static final Item BARREL = register(new BlockItem(builder(), Blocks.BARREL));
    public static final Item SMOKER = register(new BlockItem(builder(), Blocks.SMOKER));
    public static final Item BLAST_FURNACE = register(new BlockItem(builder(), Blocks.BLAST_FURNACE));
    public static final Item CARTOGRAPHY_TABLE = register(new BlockItem(builder(), Blocks.CARTOGRAPHY_TABLE));
    public static final Item FLETCHING_TABLE = register(new BlockItem(builder(), Blocks.FLETCHING_TABLE));
    public static final Item GRINDSTONE = register(new BlockItem(builder(), Blocks.GRINDSTONE));
    public static final Item SMITHING_TABLE = register(new BlockItem(builder(), Blocks.SMITHING_TABLE));
    public static final Item STONECUTTER = register(new BlockItem(builder(), Blocks.STONECUTTER));
    public static final Item BELL = register(new BlockItem(builder(), Blocks.BELL));
    public static final Item LANTERN = register(new BlockItem(builder(), Blocks.LANTERN));
    public static final Item SOUL_LANTERN = register(new BlockItem(builder(), Blocks.SOUL_LANTERN));
    public static final Item SWEET_BERRIES = register(new BlockItem("sweet_berries", builder(), Blocks.SWEET_BERRY_BUSH));
    public static final Item GLOW_BERRIES = register(new BlockItem("glow_berries", builder(), Blocks.CAVE_VINES));
    public static final Item CAMPFIRE = register(new BlockItem(builder(), Blocks.CAMPFIRE));
    public static final Item SOUL_CAMPFIRE = register(new BlockItem(builder(), Blocks.SOUL_CAMPFIRE));
    public static final Item SHROOMLIGHT = register(new BlockItem(builder(), Blocks.SHROOMLIGHT));
    public static final Item HONEYCOMB = register(new Item("honeycomb", builder()));
    public static final Item BEE_NEST = register(new BlockItem(builder(), Blocks.BEE_NEST));
    public static final Item BEEHIVE = register(new BlockItem(builder(), Blocks.BEEHIVE));
    public static final Item HONEY_BOTTLE = register(new Item("honey_bottle", builder().stackSize(16)));
    public static final Item HONEYCOMB_BLOCK = register(new BlockItem(builder(), Blocks.HONEYCOMB_BLOCK));
    public static final Item LODESTONE = register(new BlockItem(builder(), Blocks.LODESTONE));
    public static final Item CRYING_OBSIDIAN = register(new BlockItem(builder(), Blocks.CRYING_OBSIDIAN));
    public static final Item BLACKSTONE = register(new BlockItem(builder(), Blocks.BLACKSTONE));
    public static final Item BLACKSTONE_SLAB = register(new BlockItem(builder(), Blocks.BLACKSTONE_SLAB));
    public static final Item BLACKSTONE_STAIRS = register(new BlockItem(builder(), Blocks.BLACKSTONE_STAIRS));
    public static final Item GILDED_BLACKSTONE = register(new BlockItem(builder(), Blocks.GILDED_BLACKSTONE));
    public static final Item POLISHED_BLACKSTONE = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE));
    public static final Item POLISHED_BLACKSTONE_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_SLAB));
    public static final Item POLISHED_BLACKSTONE_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_STAIRS));
    public static final Item CHISELED_POLISHED_BLACKSTONE = register(new BlockItem(builder(), Blocks.CHISELED_POLISHED_BLACKSTONE));
    public static final Item POLISHED_BLACKSTONE_BRICKS = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_BRICKS));
    public static final Item POLISHED_BLACKSTONE_BRICK_SLAB = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_BRICK_SLAB));
    public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS = register(new BlockItem(builder(), Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS));
    public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS = register(new BlockItem(builder(), Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS));
    public static final Item RESPAWN_ANCHOR = register(new BlockItem(builder(), Blocks.RESPAWN_ANCHOR));
    public static final Item CANDLE = register(new BlockItem(builder(), Blocks.CANDLE));
    public static final Item WHITE_CANDLE = register(new BlockItem(builder(), Blocks.WHITE_CANDLE));
    public static final Item ORANGE_CANDLE = register(new BlockItem(builder(), Blocks.ORANGE_CANDLE));
    public static final Item MAGENTA_CANDLE = register(new BlockItem(builder(), Blocks.MAGENTA_CANDLE));
    public static final Item LIGHT_BLUE_CANDLE = register(new BlockItem(builder(), Blocks.LIGHT_BLUE_CANDLE));
    public static final Item YELLOW_CANDLE = register(new BlockItem(builder(), Blocks.YELLOW_CANDLE));
    public static final Item LIME_CANDLE = register(new BlockItem(builder(), Blocks.LIME_CANDLE));
    public static final Item PINK_CANDLE = register(new BlockItem(builder(), Blocks.PINK_CANDLE));
    public static final Item GRAY_CANDLE = register(new BlockItem(builder(), Blocks.GRAY_CANDLE));
    public static final Item LIGHT_GRAY_CANDLE = register(new BlockItem(builder(), Blocks.LIGHT_GRAY_CANDLE));
    public static final Item CYAN_CANDLE = register(new BlockItem(builder(), Blocks.CYAN_CANDLE));
    public static final Item PURPLE_CANDLE = register(new BlockItem(builder(), Blocks.PURPLE_CANDLE));
    public static final Item BLUE_CANDLE = register(new BlockItem(builder(), Blocks.BLUE_CANDLE));
    public static final Item BROWN_CANDLE = register(new BlockItem(builder(), Blocks.BROWN_CANDLE));
    public static final Item GREEN_CANDLE = register(new BlockItem(builder(), Blocks.GREEN_CANDLE));
    public static final Item RED_CANDLE = register(new BlockItem(builder(), Blocks.RED_CANDLE));
    public static final Item BLACK_CANDLE = register(new BlockItem(builder(), Blocks.BLACK_CANDLE));
    public static final Item SMALL_AMETHYST_BUD = register(new BlockItem(builder(), Blocks.SMALL_AMETHYST_BUD));
    public static final Item MEDIUM_AMETHYST_BUD = register(new BlockItem(builder(), Blocks.MEDIUM_AMETHYST_BUD));
    public static final Item LARGE_AMETHYST_BUD = register(new BlockItem(builder(), Blocks.LARGE_AMETHYST_BUD));
    public static final Item AMETHYST_CLUSTER = register(new BlockItem(builder(), Blocks.AMETHYST_CLUSTER));
    public static final Item POINTED_DRIPSTONE = register(new BlockItem(builder(), Blocks.POINTED_DRIPSTONE));
    public static final Item OCHRE_FROGLIGHT = register(new BlockItem(builder(), Blocks.OCHRE_FROGLIGHT));
    public static final Item VERDANT_FROGLIGHT = register(new BlockItem(builder(), Blocks.VERDANT_FROGLIGHT));
    public static final Item PEARLESCENT_FROGLIGHT = register(new BlockItem(builder(), Blocks.PEARLESCENT_FROGLIGHT));
    public static final Item FROGSPAWN = register(new BlockItem(builder(), Blocks.FROGSPAWN));
    public static final Item ECHO_SHARD = register(new Item("echo_shard", builder()));
    public static final Item BRUSH = register(new Item("brush", builder().stackSize(1).maxDamage(64)));
    public static final Item NETHERITE_UPGRADE_SMITHING_TEMPLATE = register(new Item("netherite_upgrade_smithing_template", builder()));
    public static final Item SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("sentry_armor_trim_smithing_template", builder()));
    public static final Item DUNE_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("dune_armor_trim_smithing_template", builder()));
    public static final Item COAST_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("coast_armor_trim_smithing_template", builder()));
    public static final Item WILD_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("wild_armor_trim_smithing_template", builder()));
    public static final Item WARD_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("ward_armor_trim_smithing_template", builder()));
    public static final Item EYE_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("eye_armor_trim_smithing_template", builder()));
    public static final Item VEX_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("vex_armor_trim_smithing_template", builder()));
    public static final Item TIDE_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("tide_armor_trim_smithing_template", builder()));
    public static final Item SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("snout_armor_trim_smithing_template", builder()));
    public static final Item RIB_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("rib_armor_trim_smithing_template", builder()));
    public static final Item SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("spire_armor_trim_smithing_template", builder()));
    public static final Item WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("wayfinder_armor_trim_smithing_template", builder()));
    public static final Item SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("shaper_armor_trim_smithing_template", builder()));
    public static final Item SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("silence_armor_trim_smithing_template", builder()));
    public static final Item RAISER_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("raiser_armor_trim_smithing_template", builder()));
    public static final Item HOST_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("host_armor_trim_smithing_template", builder()));
    public static final Item FLOW_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("flow_armor_trim_smithing_template", builder()));
    public static final Item BOLT_ARMOR_TRIM_SMITHING_TEMPLATE = register(new Item("bolt_armor_trim_smithing_template", builder()));
    public static final Item ANGLER_POTTERY_SHERD = register(new Item("angler_pottery_sherd", builder()));
    public static final Item ARCHER_POTTERY_SHERD = register(new Item("archer_pottery_sherd", builder()));
    public static final Item ARMS_UP_POTTERY_SHERD = register(new Item("arms_up_pottery_sherd", builder()));
    public static final Item BLADE_POTTERY_SHERD = register(new Item("blade_pottery_sherd", builder()));
    public static final Item BREWER_POTTERY_SHERD = register(new Item("brewer_pottery_sherd", builder()));
    public static final Item BURN_POTTERY_SHERD = register(new Item("burn_pottery_sherd", builder()));
    public static final Item DANGER_POTTERY_SHERD = register(new Item("danger_pottery_sherd", builder()));
    public static final Item EXPLORER_POTTERY_SHERD = register(new Item("explorer_pottery_sherd", builder()));
    public static final Item FLOW_POTTERY_SHERD = register(new Item("flow_pottery_sherd", builder()));
    public static final Item FRIEND_POTTERY_SHERD = register(new Item("friend_pottery_sherd", builder()));
    public static final Item GUSTER_POTTERY_SHERD = register(new Item("guster_pottery_sherd", builder()));
    public static final Item HEART_POTTERY_SHERD = register(new Item("heart_pottery_sherd", builder()));
    public static final Item HEARTBREAK_POTTERY_SHERD = register(new Item("heartbreak_pottery_sherd", builder()));
    public static final Item HOWL_POTTERY_SHERD = register(new Item("howl_pottery_sherd", builder()));
    public static final Item MINER_POTTERY_SHERD = register(new Item("miner_pottery_sherd", builder()));
    public static final Item MOURNER_POTTERY_SHERD = register(new Item("mourner_pottery_sherd", builder()));
    public static final Item PLENTY_POTTERY_SHERD = register(new Item("plenty_pottery_sherd", builder()));
    public static final Item PRIZE_POTTERY_SHERD = register(new Item("prize_pottery_sherd", builder()));
    public static final Item SCRAPE_POTTERY_SHERD = register(new Item("scrape_pottery_sherd", builder()));
    public static final Item SHEAF_POTTERY_SHERD = register(new Item("sheaf_pottery_sherd", builder()));
    public static final Item SHELTER_POTTERY_SHERD = register(new Item("shelter_pottery_sherd", builder()));
    public static final Item SKULL_POTTERY_SHERD = register(new Item("skull_pottery_sherd", builder()));
    public static final Item SNORT_POTTERY_SHERD = register(new Item("snort_pottery_sherd", builder()));
    public static final Item COPPER_GRATE = register(new BlockItem(builder(), Blocks.COPPER_GRATE));
    public static final Item EXPOSED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.EXPOSED_COPPER_GRATE));
    public static final Item WEATHERED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.WEATHERED_COPPER_GRATE));
    public static final Item OXIDIZED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.OXIDIZED_COPPER_GRATE));
    public static final Item WAXED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.WAXED_COPPER_GRATE));
    public static final Item WAXED_EXPOSED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_COPPER_GRATE));
    public static final Item WAXED_WEATHERED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_COPPER_GRATE));
    public static final Item WAXED_OXIDIZED_COPPER_GRATE = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_COPPER_GRATE));
    public static final Item COPPER_BULB = register(new BlockItem(builder(), Blocks.COPPER_BULB));
    public static final Item EXPOSED_COPPER_BULB = register(new BlockItem(builder(), Blocks.EXPOSED_COPPER_BULB));
    public static final Item WEATHERED_COPPER_BULB = register(new BlockItem(builder(), Blocks.WEATHERED_COPPER_BULB));
    public static final Item OXIDIZED_COPPER_BULB = register(new BlockItem(builder(), Blocks.OXIDIZED_COPPER_BULB));
    public static final Item WAXED_COPPER_BULB = register(new BlockItem(builder(), Blocks.WAXED_COPPER_BULB));
    public static final Item WAXED_EXPOSED_COPPER_BULB = register(new BlockItem(builder(), Blocks.WAXED_EXPOSED_COPPER_BULB));
    public static final Item WAXED_WEATHERED_COPPER_BULB = register(new BlockItem(builder(), Blocks.WAXED_WEATHERED_COPPER_BULB));
    public static final Item WAXED_OXIDIZED_COPPER_BULB = register(new BlockItem(builder(), Blocks.WAXED_OXIDIZED_COPPER_BULB));
    public static final Item TRIAL_SPAWNER = register(new BlockItem(builder(), Blocks.TRIAL_SPAWNER));
    public static final Item TRIAL_KEY = register(new Item("trial_key", builder()));
    public static final Item OMINOUS_TRIAL_KEY = register(new Item("ominous_trial_key", builder()));
    public static final Item VAULT = register(new BlockItem(builder(), Blocks.VAULT));
    public static final Item OMINOUS_BOTTLE = register(new OminousBottleItem("ominous_bottle", builder()));
    public static final Item BREEZE_ROD = register(new Item("breeze_rod", builder()));

    public static final int AIR_ID = AIR.javaId();

    private static <T extends Item> T register(T item) {
        return register(item, Registries.JAVA_ITEMS.get().size());
    }

    public static <T extends Item> T register(T item, int id) {
        item.setJavaId(id);
        Registries.JAVA_ITEMS.registerWithAnyIndex(id, item, AIR);
        Registries.JAVA_ITEM_IDENTIFIERS.register(item.javaIdentifier(), item);
        return item;
    }

    private Items() {
    }
}
