# This workflow will create documentation and publish to Github pages. For now it does this in my (Bundabrg) repo when in a specific branch

name: documentation
on: [push]

jobs:
  javadoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      - name: Build with Maven
        run: |
          mvn -B javadoc:aggregate -P documentation
      - name: Archive artifacts (Geyser Javadoc)
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: javadoc
          path: target/site/

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
          architecture: 'x64'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./requirements.txt

      - run: mkdocs build

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: build/docs

  deploy:
    if: github.ref == 'refs/heads/feature/plugins'
    needs: [javadoc, documentation]

    runs-on: ubuntu-latest
    steps:
      - name: Download Javadoc Artifact
        uses: actions/download-artifact@v2
        with:
          name: javadoc
          path: target/site

      - name: Download Documentation Artifact
        uses: actions/download-artifact@v2
        with:
          name: documentation
          path: build/docs

      - run: |
          mv target/site/apidocs build/docs/apidocs

      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./build/docs

